[{"D:\\USER\\Documents\\interred\\src\\index.js":"1","D:\\USER\\Documents\\interred\\src\\layouts\\Admin\\Admin.js":"2","D:\\USER\\Documents\\interred\\src\\layouts\\RTL\\RTL.js":"3","D:\\USER\\Documents\\interred\\src\\routes.js":"4","D:\\USER\\Documents\\interred\\src\\components\\Navbars\\RTLNavbar.js":"5","D:\\USER\\Documents\\interred\\src\\components\\Sidebar\\Sidebar.js":"6","D:\\USER\\Documents\\interred\\src\\components\\Navbars\\AdminNavbar.js":"7","D:\\USER\\Documents\\interred\\src\\components\\Footer\\Footer.js":"8","D:\\USER\\Documents\\interred\\src\\components\\FixedPlugin\\FixedPlugin.js":"9","D:\\USER\\Documents\\interred\\src\\views\\Dashboard.js":"10","D:\\USER\\Documents\\interred\\src\\views\\clientes\\listaClientes.js":"11","D:\\USER\\Documents\\interred\\src\\views\\clientes\\TablesClientes.js":"12","D:\\USER\\Documents\\interred\\src\\views\\clientes\\renderRecibo.js":"13","D:\\USER\\Documents\\interred\\src\\variables\\charts.js":"14","D:\\USER\\Documents\\interred\\src\\views\\Dashboard\\decrypt.js":"15","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\views\\dashboardStyle.js":"16","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\listItemStyle.js":"17","D:\\USER\\Documents\\interred\\src\\views\\clientes\\GenExpHTML.js":"18","D:\\USER\\Documents\\interred\\src\\components\\CustomInput\\CustomInput.js":"19","D:\\USER\\Documents\\interred\\src\\components\\Card\\CardBody.js":"20","D:\\USER\\Documents\\interred\\src\\components\\Card\\CardHeader.js":"21","D:\\USER\\Documents\\interred\\src\\components\\Card\\CardIcon.js":"22","D:\\USER\\Documents\\interred\\src\\components\\Card\\Card.js":"23","D:\\USER\\Documents\\interred\\src\\components\\Grid\\GridItem.js":"24","D:\\USER\\Documents\\interred\\src\\components\\Grid\\GridContainer.js":"25","D:\\USER\\Documents\\interred\\src\\components\\CustomButtons\\Button.js":"26","D:\\USER\\Documents\\interred\\src\\components\\Table\\TableClientes.js":"27","D:\\USER\\Documents\\interred\\src\\views\\Dashboard\\spellNumber.js":"28","D:\\USER\\Documents\\interred\\src\\variables\\ip.js":"29","D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\index.js":"30","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react.js":"31","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\dropdownStyleB.js":"32","D:\\USER\\Documents\\interred\\src\\views\\calendar\\index.js":"33","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\buttonStyle.js":"34","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"35","D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\genRecibo.js":"36","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardIconStyle.js":"37","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"38","D:\\USER\\Documents\\interred\\src\\views\\Dashboard\\encrypt.js":"39","D:\\USER\\Documents\\interred\\src\\miwifi\\miwifi.js":"40","D:\\USER\\Documents\\interred\\src\\views\\calendar\\calendar.js":"41","D:\\USER\\Documents\\interred\\src\\miwifi\\lib\\Encrypt.js":"42","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"43","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"44","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\customInputStyle.js":"45","D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\delRecibo.js":"46","D:\\USER\\Documents\\interred\\src\\views\\clientes\\addClientes.js":"47","D:\\USER\\Documents\\interred\\src\\views\\clientes\\ClientesAddForm.js":"48","D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\addCliente.js":"49","D:\\USER\\Documents\\interred\\src\\views\\clientes\\editClientes.js":"50","D:\\USER\\Documents\\interred\\src\\views\\zoom\\index.js":"51","D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\editCliente.js":"52","D:\\USER\\Documents\\interred\\src\\views\\fab\\index.js":"53","D:\\USER\\Documents\\interred\\src\\views\\zoom\\zoom.js":"54","D:\\USER\\Documents\\interred\\src\\views\\fab\\fab.js":"55"},{"size":1284,"mtime":1608150178117,"results":"56","hashOfConfig":"57"},{"size":4976,"mtime":1607101868327,"results":"58","hashOfConfig":"57"},{"size":5745,"mtime":1607101868328,"results":"59","hashOfConfig":"57"},{"size":2202,"mtime":1608748122676,"results":"60","hashOfConfig":"57"},{"size":8286,"mtime":1607101868324,"results":"61","hashOfConfig":"57"},{"size":5677,"mtime":1607101868325,"results":"62","hashOfConfig":"57"},{"size":8292,"mtime":1607101868324,"results":"63","hashOfConfig":"57"},{"size":1996,"mtime":1607101868322,"results":"64","hashOfConfig":"57"},{"size":4890,"mtime":1607101868321,"results":"65","hashOfConfig":"57"},{"size":22789,"mtime":1607101868331,"results":"66","hashOfConfig":"57"},{"size":9284,"mtime":1608748122676,"results":"67","hashOfConfig":"57"},{"size":17714,"mtime":1608748122676,"results":"68","hashOfConfig":"57"},{"size":25449,"mtime":1616615824541,"results":"69","hashOfConfig":"57"},{"size":11263,"mtime":1607101868330,"results":"70","hashOfConfig":"57"},{"size":315,"mtime":1607101868331,"results":"71","hashOfConfig":"57"},{"size":1796,"mtime":1607101868273,"results":"72","hashOfConfig":"57"},{"size":2556,"mtime":1607101868269,"results":"73","hashOfConfig":"57"},{"size":1057,"mtime":1607462118011,"results":"74","hashOfConfig":"57"},{"size":2314,"mtime":1607101868321,"results":"75","hashOfConfig":"57"},{"size":1048,"mtime":1607101868319,"results":"76","hashOfConfig":"57"},{"size":1299,"mtime":1607101868320,"results":"77","hashOfConfig":"57"},{"size":1075,"mtime":1607101868320,"results":"78","hashOfConfig":"57"},{"size":1082,"mtime":1607101868318,"results":"79","hashOfConfig":"57"},{"size":644,"mtime":1607101868323,"results":"80","hashOfConfig":"57"},{"size":680,"mtime":1607101868322,"results":"81","hashOfConfig":"57"},{"size":1740,"mtime":1607101868320,"results":"82","hashOfConfig":"57"},{"size":29497,"mtime":1609053534132,"results":"83","hashOfConfig":"57"},{"size":4803,"mtime":1607101868332,"results":"84","hashOfConfig":"57"},{"size":157,"mtime":1607101868330,"results":"85","hashOfConfig":"57"},{"size":204,"mtime":1608748122691,"results":"86","hashOfConfig":"57"},{"size":7308,"mtime":1607101868263,"results":"87","hashOfConfig":"57"},{"size":3051,"mtime":1607101868271,"results":"88","hashOfConfig":"57"},{"size":51,"mtime":1607444199346,"results":"89","hashOfConfig":"57"},{"size":8664,"mtime":1607101868265,"results":"90","hashOfConfig":"57"},{"size":842,"mtime":1607101868267,"results":"91","hashOfConfig":"57"},{"size":3131,"mtime":1608060189170,"results":"92","hashOfConfig":"57"},{"size":703,"mtime":1607101868267,"results":"93","hashOfConfig":"57"},{"size":3087,"mtime":1607101868266,"results":"94","hashOfConfig":"57"},{"size":309,"mtime":1607101868332,"results":"95","hashOfConfig":"57"},{"size":2587,"mtime":1607101868329,"results":"96","hashOfConfig":"57"},{"size":4605,"mtime":1609053534133,"results":"97","hashOfConfig":"57"},{"size":1210,"mtime":1607101868329,"results":"98","hashOfConfig":"57"},{"size":1505,"mtime":1607101868270,"results":"99","hashOfConfig":"57"},{"size":315,"mtime":1607101868265,"results":"100","hashOfConfig":"57"},{"size":1406,"mtime":1607101868267,"results":"101","hashOfConfig":"57"},{"size":2100,"mtime":1607633190071,"results":"102","hashOfConfig":"57"},{"size":6929,"mtime":1608748122676,"results":"103","hashOfConfig":"57"},{"size":16562,"mtime":1616614769572,"results":"104","hashOfConfig":"57"},{"size":991,"mtime":1608748122676,"results":"105","hashOfConfig":"57"},{"size":7223,"mtime":1609053534135,"results":"106","hashOfConfig":"57"},{"size":39,"mtime":1608748122691,"results":"107","hashOfConfig":"57"},{"size":1265,"mtime":1609053534136,"results":"108","hashOfConfig":"57"},{"size":37,"mtime":1608748122691,"results":"109","hashOfConfig":"57"},{"size":1507,"mtime":1608748122691,"results":"110","hashOfConfig":"57"},{"size":2045,"mtime":1608748122691,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"uvrvso",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"114"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"114"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"243"},"D:\\USER\\Documents\\interred\\src\\index.js",[],["244","245"],"D:\\USER\\Documents\\interred\\src\\layouts\\Admin\\Admin.js",[],"D:\\USER\\Documents\\interred\\src\\layouts\\RTL\\RTL.js",[],["246","247"],"D:\\USER\\Documents\\interred\\src\\routes.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Navbars\\RTLNavbar.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Navbars\\AdminNavbar.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Footer\\Footer.js",[],"D:\\USER\\Documents\\interred\\src\\components\\FixedPlugin\\FixedPlugin.js",[],"D:\\USER\\Documents\\interred\\src\\views\\Dashboard.js",[],"D:\\USER\\Documents\\interred\\src\\views\\clientes\\listaClientes.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  UncontrolledAlert\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4\r\n} from \"variables/charts.js\";\r\n\r\nimport TablesClientes from \"./TablesClientes.js\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport stylesM from \"assets/jss/material-dashboard-react/components/listItemStyle.js\";\r\nimport decrypt from \"views/Dashboard/decrypt.js\";\r\nimport Pdf from \"./renderRecibo\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStylesM = makeStyles(stylesM);\r\nfunction getParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n    results = regex.exec(url);\r\n  if (!results) return '';\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\nexport default () => {\r\n\r\n  //\r\n  //const [color, setColor] = React.useState(\"\")\r\n  /*constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bigChartData: \"data1\"\r\n    };\r\n  }*/\r\n  const classes = useStyles();\r\n  const classesM = useStylesM();\r\n  let urlDec = getParameterByName('v');\r\n  urlDec = decrypt(urlDec);\r\n  const bandCTA = getParameterByName('bandCTA', urlDec)\r\n  const idCliente = getParameterByName('idCliente', urlDec)\r\n  const nombre = getParameterByName('nombre', urlDec)\r\n  const ubi = getParameterByName('ubi', urlDec)\r\n  const fecha = getParameterByName('fecha', urlDec)\r\n  const monto = getParameterByName('monto', urlDec)\r\n  console.log(fecha)\r\n  const añoI = getParameterByName('añoI', urlDec)\r\n  const añoF = getParameterByName('añoF', urlDec)\r\n  const pagar = getParameterByName('pagar', urlDec)\r\n  const velocidad = getParameterByName('velocidad', urlDec)\r\n  const idVelocidad = getParameterByName('idVelocidad', urlDec)\r\n  const dateSI = getParameterByName('dateSI', urlDec)\r\n  const dateSF = getParameterByName('dateSF', urlDec)\r\n  const difDate = getParameterByName(\"difDate\",urlDec)\r\n  const expiro = getParameterByName(\"expiro\",urlDec)\r\n  const idRecibo = getParameterByName(\"idRecibo\",urlDec)\r\n  const isUpdated = getParameterByName(\"isUpdated\",urlDec)\r\n  //const isDeleted = getParameterByName(\"isDeleted\",urlDec)\r\n  const [state, setState] = React.useState({bigChartData: 'data1'})\r\n  const setBgChartData = name => {\r\n    /*this.setState({\r\n      bigChartData: name\r\n    });*/\r\n  };\r\n  //msg = \"\";\r\n  //color = \"\";\r\n  let msgV = \"\"\r\n  let colorV = \"\"\r\n  if(isUpdated===\"1\"){\r\n    msgV=\"El Pago se realizó con éxito\"\r\n    colorV=\"success\"\r\n  }/*else if(isDeleted===\"1\") {\r\n    setMsg(\"El Recibo se eliminó con éxito\")\r\n    setColor(\"danger\")\r\n  }*/\r\n  const [msg, setMsg] = React.useState(msgV)\r\n  const [color, setColor] = React.useState(colorV)\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n        {msg!==\"\"&&\r\n        <UncontrolledAlert color={color} >\r\n            <span>{msg}</span>\r\n        </UncontrolledAlert>}\r\n          <Row>\r\n            <Col xs=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <h5 className=\"card-category\">{bandCTA===\"1\"?\"Pagos\":\"Clientes\"}</h5>\r\n                      <CardTitle tag=\"h2\">{bandCTA===\"1\"?\"RECIBOS\":\"REGISTRADOS\"}</CardTitle>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data1\"\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => setBgChartData(\"data1\")}\r\n                        >\r\n                          <input\r\n                            defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Registrados\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-single-02\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data2\"\r\n                          })}\r\n                          onClick={() => {\r\n                            window.history.pushState(null,'Administrador','/admin/agregarCliente')\r\n                            window.history.go()\r\n                          }}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Registrar Cliente\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-gift-2\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"2\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data3\"\r\n                          })}\r\n                          onClick={() => {\r\n                            window.history.pushState(null,'Administrador','/admin/editarCliente')\r\n                            window.history.go()\r\n                          }}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Editar Cliente\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-tap-02\" />\r\n                          </span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div >\r\n                    {bandCTA==='1' && \r\n                      <Pdf classes={classes} idCliente={idCliente}  nombre={nombre}\r\n                        ubi={ubi} fecha={fecha} monto={monto} idVelocidad={idVelocidad} dateSI={dateSI} dateSF={dateSF} velocidad={velocidad}\r\n                        pagar={pagar} difDate={difDate} expiro={expiro} idRecibo={idRecibo} setMsg={setMsg} setColor={setColor} />\r\n                    }\r\n                    {bandCTA!=='1' && \r\n                      <TablesClientes\r\n                        classes={classes} classesM={classesM} />\r\n                    }                  \r\n                    {/*<Line\r\n                      data={chartExample1[this.state.bigChartData]}\r\n                      options={chartExample1.options}\r\n                    />*/}\r\n\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n         \r\n        </div>\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\n//export default Dashboard;\r\n","D:\\USER\\Documents\\interred\\src\\views\\clientes\\TablesClientes.js",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport {isMobile} from \"react-device-detect\"; \r\nimport Lock from \"@material-ui/icons/Lock\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport {Fab} from \"views/fab\"\r\n//import Accessibility from \"@material-ui/icons/Accessibility\";\r\n//import BugReport from \"@material-ui/icons/BugReport\";\r\n//import Code from \"@material-ui/icons/Code\";\r\n//import Cloud from \"@material-ui/icons/Cloud\";\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\"; \r\nimport TableClientes from \"components/Table/TableClientes.js\";\r\nimport classNames from \"classnames\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n//import Tasks from \"components/Tasks/Tasks.js\";\r\n//import CustomTabs from \"components/CustomTabs/CustomTabs.js\";\r\n//import Danger from \"components/Typography/Danger.js\";\r\n//import Card from \"components/Card/Card.js\";\r\n//import CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\n//import CardBody from \"components/Card/CardBody.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\n//import Button from \"components/CustomButtons/Button.js\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport ip from 'variables/ip';\r\nimport GenExpHTML from \"./GenExpHTML\"\r\nimport WN from \"@material-ui/icons/Warning\"\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {Zoom} from \"views/zoom\"\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\nimport Remove from '@material-ui/icons/DeleteForever';\r\nimport Edit from '@material-ui/icons/Edit';\r\n\r\n\r\nexport default class TableRender extends React.Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        dataTable: [],\r\n        classes: props.classes,\r\n        classesM: props.classesM,\r\n        openDash: null,\r\n        setOpenDash: null,\r\n        labelB: 'NOMBRE',\r\n        openExpireDash: null,\r\n        opExp: 0.2,\r\n        IconLock: Lock ,\r\n        bandTrash: true,\r\n    };\r\n    \r\n}\r\ndeleteStack = {};\r\nrefSwitch=null;\r\n\r\nbandLock = true;\r\ntipoB = 1\r\nexpiro = 0;\r\n\r\nhandleCloseDash = () => {\r\n // setOpenDash(null);\r\n //const {setOpenDash} = this.state\r\n this.setState({openDash: null})\r\n};\r\n\r\nhandleCloseExpireDash = () => {\r\n // setOpenDash(null);\r\n //const {setOpenDash} = this.state\r\n this.setState({openExpireDash: null})\r\n};\r\n\r\nround = (num, decimales = 2)=>{\r\n  var signo = (num >= 0 ? 1 : -1);\r\n  num = num * signo;\r\n  if (decimales === 0) //con 0 decimales\r\n    return signo * Math.round(num);\r\n  // round(x * 10 ^ decimales)\r\n  num = num.toString().split('e');\r\n  num = Math.round(+(num[0] + 'e' + (num[1] ? (+num[1] + decimales) : decimales)));\r\n  // x * 10 ^ (-decimales)\r\n  num = num.toString().split('e');\r\n  return signo * (num[0] + 'e' + (num[1] ? (+num[1] - decimales) : -decimales));\r\n}\r\n\r\nsleep = (milliseconds) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\ndeleteCliente = async (idCliente) => {\r\n  let band = true;\r\n  let c = 0;\r\n  const rC = Object.keys(this.deleteStack).map((key) => [Number(key), this.deleteStack[key]]);\r\n  /*while(band){\r\n    if(c<rC.length){\r\n      this.sleep(300);\r\n    }else{\r\n      band=false\r\n    }*/\r\n    try{\r\n      const sendUri = `${ip(\"2000\")}clientes/deleteCliente`;\r\n       // const sendUri = \"http://localhost:3015/\";\r\n        //const sendUri = \"http://192.168.1.74:3015/\";\r\n       const bodyJSON = {\r\n         idClientes: rC,\r\n       }\r\n        const response = await fetch(sendUri, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(bodyJSON)\r\n        });\r\n\r\n        const responseJson = await response.json().then(r => {\r\n          console.log(r)\r\n          if(r.exito){\r\n\r\n          }\r\n        //  c++;\r\n        });\r\n    }catch(e){\r\n\r\n    }\r\n  //}\r\n}\r\n\r\nallClientes=async(cliente)=>{\r\n    try {\r\n\r\n       //const sendUri = \"http://34.66.54.10:3015/\";\r\n       //const GenExpHTML = GenExpHTML\r\n       const sendUri = `${ip(\"2000\")}clientes/get`;\r\n       // const sendUri = \"http://localhost:3015/\";\r\n        //const sendUri = \"http://192.168.1.74:3015/\";\r\n       const bodyJSON = {\r\n         cliente: cliente,\r\n         tipoB: this.tipoB\r\n       }\r\n        const response = await fetch(sendUri, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(bodyJSON)\r\n        });\r\n\r\n        const responseJson = await response.json().then(r => {\r\n              console.log(`Response1:`)\r\n              console.log(r)\r\n            let data = [];\r\n            if (r.clientes) {\r\n             r.clientes.forEach(e => {\r\n                data.push({\r\n                  key: e.idCliente,\r\n                  cliente: e.cliente,\r\n                  telefono: e.telefono,\r\n                  ubi: e.ubi,\r\n                  fechaPago: null,\r\n                  fechaDePago:  e.ultimoRecibo?e.ultimoRecibo.fechaPago:e.ultimoRecibo,\r\n                  monto: null,\r\n                  montor: e.ultimoRecibo?e.ultimoRecibo.monto:e.ultimoRecibo,\r\n                  idVelocidad: e.ultimoRecibo?e.ultimoRecibo.idVelocidad:e.ultimoRecibo,\r\n                  velocidad: e.ultimoRecibo?e.ultimoRecibo.velocidad:e.ultimoRecibo,\r\n                  expiro: e.expiro,\r\n                  refRow: React.createRef(),\r\n                  dateSI:  e.ultimoRecibo?e.ultimoRecibo.dateI:e.ultimoRecibo,\r\n                  dateSF:  e.ultimoRecibo?e.ultimoRecibo.dateF:e.ultimoRecibo,\r\n                  difDate:  e.ultimoRecibo?e.ultimoRecibo.difDate:e.ultimoRecibo,\r\n                  idRecibo:  e.ultimoRecibo?e.ultimoRecibo.idRecibo:e.ultimoRecibo,\r\n                  \r\n                });\r\n                console.log(data) \r\n                if(e.expiro){\r\n                  this.expiro=1;\r\n                  data[data.length-1].fechaPago=<div  >\r\n                  <GenExpHTML c={this} refRow={data[data.length-1].refRow}  /> \r\n                  <i style={{color: 'red'}} >{data[data.length-1].fechaDePago}</i>\r\n                  </div>\r\n                  data[data.length-1].monto=<><i style={{color: 'red'}} >{data[data.length-1].montor}</i></>\r\n                //  data[data.length-1].velocidad=<i style={{color: 'red'}} >{data[data.length-1].velocidad}</i>\r\n                }\r\n\r\n             })\r\n\r\n            }\r\n            \r\n            this.setState({dataTable: data});\r\n            /*else if (r.error.name === \"error01\") {\r\n                       this.removeCookies()\r\n                       confirmAlert({\r\n                         title: \"¡Error!\",\r\n                         message: \"La contraseña es incorrecta.\",\r\n                         buttons: [{\r\n                           label: \"Aceptar\",\r\n                           onClick: () => {\r\n                             this.props.history.push(\"/entrar\");\r\n                           }\r\n                         }]\r\n                       });\r\n                     }*/\r\n        });\r\n    } catch (e) {\r\n        console.log(`Error: ${e}`);\r\n    }\r\n}\r\n\r\neditClientes = () => {\r\n  Object.keys(this.deleteStack).map((key) => {\r\n    //[Number(key), this.deleteStack[key]]\r\n    const idRol = \"1\";\r\n    const url = idRol === '1' ? `/admin/editarCliente/${key}` : `/usuario/editarCliente/${key}`;\r\n    //const url = `/admin/editarCliente/${key}`;\r\n    const win = window.open(url, '_blank');\r\n    win.focus();\r\n  });\r\n}\r\n\r\ngetParameterByName=(name, url) => {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n    results = regex.exec(url);\r\n  if (!results) return '';\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\n\r\nchangeDash = event => {\r\n  const {openDash} = this.state;\r\n  if (openDash && openDash.contains(event.target) ) {\r\n    //setOpenDash(null);\r\n    this.setState({openDash: null});\r\n  } else {\r\n    //setOpenDash(event.currentTarget);\r\n    this.setState({openDash: event.currentTarget});\r\n  }\r\n}\r\n\r\nhandleClickDash = event => {\r\n  this.changeDash(event);\r\n};\r\n\r\nchangeExpireDash = event => {\r\n  const {openExpireDash} = this.state;\r\n  if (openExpireDash && openExpireDash.contains(event.target) ) {\r\n    //setOpenDash(null);\r\n    this.setState({openExpireDash: null});\r\n  } else {\r\n    //setOpenDash(event.currentTarget);\r\n    this.setState({openExpireDash: event.currentTarget});\r\n  }\r\n}\r\n\r\nhandleClickExpireDash = event => {\r\n  console.log(\"clickExpireDash\")\r\n  this.setState({opExp: 1})\r\n  //this.changeExpireDash(event);\r\n};\r\n\r\nselectionStartNombre = null\r\nselectionEndNombre = null\r\nhandleUpper = e => {\r\n  if(!isMobile){\r\n    if (e.which === 32 || e.which > 39) {\r\n      this.selectionStartNombre = e.target.selectionStart\r\n      this.selectionEndNombre = e.target.selectionEnd\r\n      e.target.value = e.target.value.toUpperCase()\r\n      e.target.setSelectionRange(this.selectionStartNombre, this.selectionEndNombre);\r\n    }\r\n  }\r\n  //if (e.target.value === '') {\r\n    this.allClientes(e.target.value)\r\n  //}\r\n}\r\n\r\nbuscarCTA = (key) => (event) => {\r\n  const CTAnombre = document.getElementById('CTANM').value;\r\n  //const checkU = document.getElementById('check0');\r\n  this.tipoB = key\r\n  const labelB = key===0?'ID':'NOMBRE'\r\n  this.setState({labelB})\r\n  //if (CTAnombre !== '') {\r\n  this.allClientes(CTAnombre)    \r\n // }\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n  this.allClientes('')\r\n}\r\n\r\nrender() {\r\n  const {\r\n    dataTable,\r\n    classes,\r\n    classesM,\r\n    openDash,\r\n    labelB,\r\n    IconLock,\r\n    bandTrash\r\n  } = this.state;\r\n  \r\n  const headCells = [\r\n    { id: 'idCliente', numeric: false, disablePadding: true, label: 'ID' },\r\n    { id: 'cliente', numeric: false, disablePadding: true, label: 'Cliente' },\r\n    { id: 'tel', numeric: false, disablePadding: false, label: 'Telefono' },\r\n    { id: 'ubi', numeric: false, disablePadding: false, label: 'Ubicación del servicio' },\r\n    { id: 'fechaSF', numeric: false, disablePadding: false, label: 'Próximo pago' }, \r\n    { id: 'fechaPago', numeric: false, disablePadding: false, label: 'Fecha de pago' },\r\n    { id: 'montoPagar', numeric: true, disablePadding: false, label: 'Monto a pagar' },\r\n    { id: 'velocidad', numeric: false, disablePadding: false, label: 'Velocidad' },\r\n   // { id: 'construccion', numeric: true, disablePadding: false, label: 'Construccion' },\r\n  ]\r\n  return (\r\n   <>\r\n        <div className=\"content\">\r\n   <Row>\r\n            <Col xs=\"12\">\r\n              <Card>\r\n               \r\n                <CardBody>\r\n                  <div >\r\n                     <CustomInput\r\n                      formControlProps={{\r\n                        className: classes.margin + \" \" + classes.search\r\n                      }}\r\n                      id=\"CTANM\"\r\n                      inputProps={{\r\n                        placeholder: labelB,\r\n                        type: \"text\",\r\n                        onKeyUp: this.handleUpper,\r\n                        onMouseUp: this.handleUpper,\r\n                        //value: idUsuario,\r\n\r\n                        inputProps: {\r\n                          \"aria-label\": \"Search\"\r\n                        }\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      color=\"white\"\r\n                      onMouseEnter={(e)=>{this.setState({openDash: e.currentTarget});}}\r\n                      onMouseUp={this.handleClickDash}\r\n                      aria-label=\"edit\"\r\n                      aria-owns={openDash ? \"profile-menu-list-grow\" : null}\r\n                      aria-haspopup=\"true\"\r\n                      justIcon\r\n                      round\r\n                    >\r\n                      <Search />\r\n                    </Button>\r\n                    <Poppers\r\n                      open={Boolean(openDash)}\r\n                      anchorEl={openDash}\r\n                      transition\r\n                      disablePortal\r\n                      className={\r\n                        classNames({ [classesM.popperClose]: !openDash }) +\r\n                        \" \" +\r\n                        classesM.popperNav\r\n                      }\r\n                      style={{ zIndex: 9999 }}\r\n                    >\r\n                      {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                          {...TransitionProps}\r\n                          id=\"profile-menu-list-grow\"\r\n                          style={{\r\n                            transformOrigin:\r\n                              placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n                          }}\r\n                        >\r\n                          <Paper>\r\n                            <ClickAwayListener onClickAway={this.handleCloseDash}>\r\n                              <MenuList role=\"menu\">\r\n                                <MenuItem\r\n                                  key={\"cuenta\"}\r\n                                  className={classesM.dropdownItem}\r\n                                  onClick={this.buscarCTA(0)}\r\n                                >\r\n                                  Por ID.\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                  key={\"nombre\"}\r\n                                  className={classesM.dropdownItem}\r\n                                  onClick={this.buscarCTA(1)}\r\n                                >\r\n                                  Por nombre\r\n                                </MenuItem>\r\n                              </MenuList>\r\n                            </ClickAwayListener>\r\n                          </Paper>\r\n                        </Grow>\r\n                      )}\r\n                    </Poppers>\r\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                   <Zoom \r\n                    bandIn={true}\r\n                    click = {(e)=>{\r\n                        const bodySide = document.getElementById(\"switchLock\");\r\n                        //const {mLLock} = this.state;\r\n                        console.log(bodySide)\r\n                        //window.innerWidth\r\n                        if(!this.bandLock){\r\n                          bodySide.style.marginLeft=\"0px\";\r\n                          bodySide.parentElement.style.backgroundColor=\"red\";\r\n                          bodySide.style.backgroundColor=\"white\";\r\n                          this.setState({IconLock: Lock})\r\n                        }else{\r\n                          bodySide.style.marginLeft=\"55px\";\r\n                          bodySide.parentElement.style.backgroundColor=\"green\";\r\n                          bodySide.style.backgroundColor=\"white\";\r\n                          this.setState({IconLock: Settings})\r\n                        }\r\n                        \r\n                        this.bandLock = !this.bandLock;\r\n                      // bodySide.style.width=\"calc(100% - 260px);\"\r\n                        //bodySide.style.width=window.innerWidth-260+\"px\"\r\n                        //props.bandFadeSide[0] = true\r\n                        //bodySide.classList.toggle('sideIN')\r\n                        //document.getElementById(\"sideBtn\").style.display='none'\r\n                        //bodySide.classList.toggle(\"unlockClientes\")\r\n                      }}\r\n                    cp={<div \r\n                    \r\n                    style={{boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.3)\", zIndex: 9999, width: 100, height: 50, borderRadius: 30, paddingTop: 2,cursor: 'pointer',backgroundColor: 'red',}} >\r\n                      <div\r\n                      id='switchLock'\r\n                      ref={this.refSwitch}\r\n                       \r\n                      className=\"wrapperClientes\"\r\n                      style={{display: 'flex', flex: 1,backgroundColor: 'white',  WebkitTransition:\"all 0.321s ease-out\", MozTransition:\"all 0.321s ease-out\", msTransition: \"all 0.321s ease-out\", transition: \"all 0.321s ease-out\", alignItems: 'center',justifyContent:'center', boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.3)\", width: 45, height: 45, borderRadius: 30}} >\r\n                        <IconLock />\r\n                      </div>\r\n                    </div>}\r\n\r\n                    />\r\n                    <div style={{width: 30}} />\r\n                    <Fab c={this} bandIn={!this.bandLock} Icon={Edit} color='primary' handleClick={this.editClientes} />\r\n                    <div style={{width: 30}} />\r\n                    <Fab c={this} bandIn={!this.bandLock} Icon={Remove} color='secondary' handleClick={this.deleteCliente} />\r\n                    \r\n                    </div>\r\n                  </div>\r\n                  <TableClientes\r\n                  c={this}\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={headCells}\r\n                tableData={dataTable}\r\n              />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n          </>\r\n  )\r\n}\r\n\r\n}","D:\\USER\\Documents\\interred\\src\\views\\clientes\\renderRecibo.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  PDFViewer,\r\n  Page,\r\n  Text,\r\n  Document,\r\n  Font,\r\n  StyleSheet,\r\n  View,\r\n  Image\r\n} from \"@react-pdf/renderer\";\r\nimport {\r\n  MobileView,\r\n  isMobile\r\n} from \"react-device-detect\";\r\nimport { MobilePDFReader } from \"react-read-pdf\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport LogoI from \"assets/img/INTERRED.jpg\";\r\nimport pie from \"assets/img/pie.jpg\";\r\n/*import LogoC from \"../Icons/LOGOI.jpeg\";\r\nimport marca from \"../Icons/marcagua.png\";\r\nimport LogoD from \"../Icons/LOGOD.jpeg\";\r\nimport cintillo from \"../../assets/img/cintillo.jpeg\";*/\r\nimport RobI from \"../Typography/Roboto-Italic.ttf\";\r\nimport RobB from \"../Typography/Roboto-Bold.ttf\";\r\nimport RobBI from \"../Typography/Roboto-BoldItalic.ttf\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport spellNumber from \"views/Dashboard/spellNumber\";\r\n//import Calendar from \"react-calendar\";\r\nimport {Calendar} from \"views/calendar\"\r\nimport {delRecibo, genRecibo} from \"./methods\"\r\nimport WN from \"@material-ui/icons/Warning\"\r\n//import spellNumber from \"./spellNumber\";\r\n//import InformeM from \"./InformeM\";\r\n// reactstrap components\r\nimport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nFont.register({\r\n  family: 'Roboto',\r\n  fonts: [{\r\n    src: RobI,\r\n    fontStyle: 'italic',\r\n    fontWeight: 50\r\n  }, {\r\n    src: RobB,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    src: RobBI,\r\n    fontStyle: 'italic',\r\n    fontWeight: 'bold'\r\n  }]\r\n  \r\n});\r\n\r\nclass App extends React.Component {\r\n  //state = { url: null , dia: null, mes: null, año: null, renderPDF: null};\r\n  tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n  dateSI = new Date(Date.now() - this.tzoffset);\r\n  dateSF = new Date(Date.now() - this.tzoffset);\r\n  idUsuario=0;\r\n  constructor(props){\r\n    super(props);\r\n    //corte.options.high = 1000000\r\n    //corte.data.labels = [\"ENERO\", \"FEBRERO\", \"MARZO\", \"ABRIL\", \"MAYO\", \"JUNIO\", \"JULIO\", \"AGOSTO\", \"SEPTIEMBRE\", \"OCTUBRE\", \"NOVIEMBRE\", \"DICIEMBRE\"]\r\n    //corte.data.series = [[]]\r\n    this.tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n    this.dateSI = new Date(Date.now() - this.tzoffset);\r\n    this.dateSF = new Date(Date.now() - this.tzoffset);\r\n    this.dateSI.setHours(0,0,0,0);\r\n    this.dateSF.setHours(0,0,0,0);\r\n    const d = new Date();\r\n    console.log(\"props.monto\")\r\n    console.log(props.monto)\r\n    this.state={\r\n      url:null,\r\n      dia: d.getDate(),\r\n      mes: d.getMonth(),\r\n      año: d.getFullYear(),\r\n      urbanoI: 0,\r\n      idCliente: props.idCliente,\r\n      nombre: props.nombre,\r\n      ubi: props.ubi,\r\n      monto: props.monto,\r\n      fechaPago: this.dateSI.toISOString(),\r\n      expiro: props.expiro,\r\n      idVelocidad: props.idVelocidad,\r\n      velocidad: props.velocidad,\r\n      pagar: props.pagar,\r\n      fechaSI: props.dateSI,\r\n      fechaSF: props.dateSF,\r\n      difDate: props.difDate,\r\n      bandGen: false,\r\n      idRecibo: props.idRecibo,\r\n      setMsg: props.setMsg,\r\n      setColor: props.setColor\r\n      \r\n    }\r\n    \r\n  }\r\n  \r\n    \r\n    \r\n\r\n  onRender = ({ blob }) => {\r\n    this.setState({ url: URL.createObjectURL(blob) });\r\n    console.log(blob)\r\n    console.log(isMobile)\r\n    if (isMobile){\r\n      let pdfview = document.getElementById(\"pdfView\");\r\n      let mobilePdf = document.getElementById('mobilePdf');\r\n      let h = window.devicePixelRatio<2?960:360 //window.screen.availHeight;\r\n      mobilePdf.style.height=`${h}px`;\r\n      pdfview.style.display='none';\r\n      ReactDOM.unmountComponentAtNode(mobilePdf)\r\n      ReactDOM.render(<MobilePDFReader url={this.state.url} />, mobilePdf);\r\n    }\r\n  };\r\n  \r\n  handdleUp = (e) => {\r\n    const {fechaSI,fechaSF} = this.state\r\n    //e.target.disabled = true\r\n    this.setState({bandGen: true})\r\n    \r\n    const nombre = document.getElementById('nombre').value;\r\n    const ubi = document.getElementById('ubi').value;\r\n    //const añoF = document.getElementById('añoF').value\r\n    //const totalA = spellNumber(parseInt(añoF) - parseInt(añoI)).replace('PESOS', '').replace('PESO', '')\r\n    const pagar = document.getElementById('pagar').value;\r\n    const fechaPago = new Date(new Date(Date.now()) - this.tzoffset).toISOString().slice(0, -1);\r\n    let dateSI = new Date(fechaSI);\r\n    let dateSF = new Date(fechaSF);\r\n    dateSI = new Date(dateSI - this.tzoffset);\r\n    dateSF = new Date(dateSF - this.tzoffset);\r\n    genRecibo(this,nombre,ubi,pagar,fechaPago,fechaSI,fechaSF)\r\n  }\r\n\r\n  handdleDel = (e) => {\r\n    delRecibo(this);\r\n\r\n\r\n  }\r\n\r\n  handdleU = (e) => {\r\n    const ubi = document.getElementById('ubi').value\r\n    this.setState({ubi})\r\n  }\r\n\r\n  handleUpper = e => {\r\n    if (e.which === 32 || e.which > 39) {\r\n      this.selectionStartNombre = e.target.selectionStart\r\n      this.selectionEndNombre = e.target.selectionEnd\r\n      e.target.value = e.target.value.toUpperCase()\r\n      e.target.setSelectionRange(this.selectionStartNombre, this.selectionEndNombre);\r\n    }else if(e.which===13){\r\n      this.handdleUp()\r\n    }\r\n  }\r\n\r\n  handleUpperN = e => {\r\n    if (e.which === 13) {\r\n      this.handdleUp()\r\n    }\r\n  }\r\n  componentDidMount(){\r\n   // InformeM(this.props.dateSI, this.props.dateSF, this)\r\n  }\r\n\r\n  styles = StyleSheet.create({\r\n    logoI: {\r\n      position: \"absolute\",\r\n      width: 125,\r\n      height: 125,\r\n      left: 20,\r\n      top: 20\r\n    },\r\n    pie: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: 375,\r\n      left: 0,\r\n      bottom: 0\r\n    },\r\n    logoD: {\r\n      position: \"absolute\",\r\n      width: 125,\r\n      height: 50,\r\n      right: 15,\r\n      top: 30\r\n    },\r\n    logoB: {\r\n      position: \"absolute\",\r\n      width: 600,\r\n      opacity: 0.7,\r\n      height: 500,\r\n      left: 40,\r\n      top: 150\r\n    },\r\n    cintillo: {\r\n      position: \"absolute\",\r\n      width: '95%',\r\n      height: 30,\r\n      right: 15,\r\n      left: 15,\r\n      bottom: 60\r\n    },\r\n    headV: {\r\n      textAlign: 'left',\r\n      top: 20,\r\n      left: 160\r\n    },\r\n    headT: {\r\n      fontFamily: \"Roboto\",\r\n      fontWeight: 'bold',\r\n      color: \"white\",\r\n      left: 230,\r\n      top: 70,\r\n      paddingLeft: 40,\r\n      backgroundColor: 'black',\r\n      width: 170\r\n    },\r\n    headO: {\r\n      fontFamily: \"Roboto\",\r\n      fontWeight: 'bold',\r\n    },\r\n    labelR: {\r\n      fontFamily: \"Roboto\",\r\n      fontStyle: 'italic',\r\n      fontWeight: 'bold'\r\n    },\r\n    table: { \r\n      position:'relative',\r\n      display: \"table\", \r\n      width: \"40%\", \r\n      left: 30,\r\n      top: 30,\r\n      borderStyle: \"solid\", \r\n      borderWidth: 1, \r\n      borderRightWidth: 0, \r\n      borderBottomWidth: 0 \r\n    },\r\n    tableRow: { \r\n      margin: \"auto\",\r\n      height: 20, \r\n      flexDirection: \"row\" \r\n    }, \r\n    tableCol: { \r\n      width: \"100%\", \r\n      borderStyle: \"solid\", \r\n      borderWidth: 0.5, \r\n      borderLeftWidth: 0, \r\n      borderTopWidth: 0 \r\n    },\r\n    tableCol2: {\r\n      width: \"50%\",\r\n      borderStyle: \"solid\",\r\n      borderWidth: 1,\r\n      borderLeftWidth: 0,\r\n      borderTopWidth: 0\r\n    },\r\n    tableCol3: {\r\n      width: \"50%\",\r\n      borderStyle: \"solid\",\r\n      borderWidth: 1,\r\n      borderLeftWidth: 0,\r\n      borderTopWidth: 0\r\n    },\r\n    tableCell: { \r\n      marginLeft: 0, \r\n      marginTop: 2,\r\n      marginBottom: 1,\r\n      fontSize: 8,\r\n      textAlign: 'center',\r\n      paddingVertical: 3\r\n    },\r\n    tableCell2: { \r\n      marginLeft: 0, \r\n      marginTop: 2,\r\n      marginBottom: 1,\r\n      fontSize: 6,\r\n      textAlign: 'center',\r\n      paddingVertical: 3\r\n    }\r\n\r\n  });\r\nonChangeDI = date => {\r\n  const {dateSF} = this.state\r\n  let dateNSF = new Date(dateSF)\r\n  dateNSF.setDate(dateSF.getDate() + 1);\r\n  console.log('DI00')\r\n  //this.obtenerOF(date, dateNSF)\r\n  this.setState({ dateSI: date })\r\n}\r\nonChangeDF = date => {\r\n  const {dateSI} = this.state\r\n  let dateNSF = new Date(date);\r\n  dateNSF.setDate(date.getDate() + 1);\r\n  console.log('DF00')\r\n  //this.obtenerOF(dateSI, dateNSF);\r\n  this.setState({ dateSF: date })\r\n}\r\nsetTotal=(t,idV,v)=>{\r\n    let {difDate} = this.state\r\n    difDate = difDate===\"undefined\"?1:difDate\r\n    console.log(`difDate: ${difDate}`)\r\n    const monto = t * difDate\r\n    const velL = document.getElementById(\"velocidadL\");\r\n    velL.value=v;\r\n    \r\n    console.log(monto)\r\n    //c.setState({pagar})\r\n    //console.log(difDate)\r\n    this.setState({idVelocidad: idV,velocidad: v,monto})\r\n} \r\n  render() {\r\n    const {classes} = this.props\r\n    const {dia, idCliente, nombre, ubi, fechaPago, monto, mes, año,pagar, fechaSI, fechaSF, añoF, idVelocidad, velocidad,difDate, expiro,bandGen,idRecibo} = this.state\r\n    const nDoc = `RECIBO_CLIENTE_${idCliente}`\r\n    //const dateSI = \"\";\r\n    //const dateSF = \"\"\r\n    return (\r\n      <CardIcon>\r\n        {expiro === \"1\" && <>\r\n            <div style={{position: 'absolute', opacity:1, top:80, paddingTop:15, backgroundColor: 'red', zIndex:9999, alignContent:'center', height: 50, borderRadius: 20, boxShadow: \"4px 4px 4px 2px rgba(1, 1, 1, 0.2)\",  borderWidth: 0.5, borderColor: 'black', elevation: 2}}>\r\n                    <WN color=\"inherit\"  \r\n                    /> <i style={{color:'white'}} >¡ADVERTENCÍA! Él número de cliente presenta un adeudo, favor de hacer el pago.</i>\r\n            </div>\r\n                  </>}\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <Card>\r\n              <CardBody>\r\n              <React.Fragment>\r\n                  <GridContainer>\r\n                    \r\n                  <GridItem xs={12} sm={12} md={3}>\r\n                  \r\n                      <CustomInput\r\n                        labelText=\"NOMBRE:\"\r\n                        id=\"nombre\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"text\",\r\n                          defaultValue: nombre,\r\n                          //onBlur: this.handdleU\r\n                          onKeyUp: this.handleUpper,\r\n                          //onMouseUp: this.handdleU\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={3}>\r\n                      <CustomInput\r\n                        labelText=\"UBICACIÓN:\"\r\n                        id=\"ubi\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"text\",\r\n                          defaultValue: ubi,\r\n                          //onBlur: this.handdleU\r\n                          onKeyUp: this.handleUpper,\r\n                          //onMouseUp: this.handdleU\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={3}>\r\n                    <UncontrolledDropdown style={{position: 'relative', left: 0}}>\r\n                      <DropdownToggle\r\n                          caret\r\n                          className=\"btn-icon\"\r\n                          color=\"link\"\r\n                          data-toggle=\"dropdown\"\r\n                          type=\"button\"\r\n                          style={{width: 90}}\r\n                        >\r\n                        VELOCIDAD: \r\n                        </DropdownToggle>\r\n                        <DropdownToggle\r\n                          caret\r\n                          className=\"btn-icon\"\r\n                          color=\"link\"\r\n                          data-toggle=\"dropdown\"\r\n                          type=\"button\"\r\n                        >\r\n                          <i className=\"tim-icons icon-settings-gear-63\" />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu aria-labelledby=\"dropdownMenuLink\" left>\r\n                          <DropdownItem\r\n                           // href=\"#pablo\"\r\n                           style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              /*let difDate = 0\r\n                              let pagar = 0;\r\n                              const {fechaSI, fechaSF} = this.state\r\n                              const dateA = new Date(fechaSI);\r\n                              const dateB = new Date(fechaSF);\r\n                              //const {idVelocidad} = this.state;\r\n                              while(dateA<dateB){\r\n                                dateA.setMonth(dateA.getMonth()+1);\r\n                                difDate++;\r\n                              }*/\r\n                              this.setTotal(150,0,e.target.innerHTML)\r\n                            \r\n                            }}\r\n                          >\r\n                            10 MEGAS\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                           // href=\"#pablo\"\r\n                           style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              this.setTotal(250,1,e.target.innerHTML)\r\n                            }}\r\n                          >\r\n                            20 MEGAS\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                           // href=\"#pablo\"\r\n                           style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              this.setTotal(300,2,e.target.innerHTML)\r\n                            \r\n                            }}\r\n                          >\r\n                            30 MEGAS\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                        <div style={{height: 7}} />\r\n                        \r\n                        <CustomInput\r\n                        labelText=\"VELOCIDAD:\"\r\n                        id=\"velocidadL\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                        //  type: \"number\",\r\n                          placeholder: 'VELOCIDAD',\r\n                          defaultValue: '\\0'\r\n                        }}\r\n                      />\r\n                      </UncontrolledDropdown>\r\n                  \r\n                    </GridItem>\r\n                  <GridItem xs={12} sm={12} md={3}>\r\n                      <CustomInput\r\n                        labelText=\"A PAGAR:\"\r\n                        id=\"pagar\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"number\",\r\n                          //defaultValue: parseInt(pagar)===0?monto:pagar,\r\n                          value: monto!==\"undefined\"?monto:150\r\n                          //onBlur: this.handdleU\r\n                          //onKeyUp: this.handleUpper,\r\n                          //onMouseUp: this.handdleU\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n\r\n                  </GridContainer>\r\n                  <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={6}>\r\n                      <h4 className={classes.cardTitleBlack}>\r\n                        PERIODO DE SUBSCRIPCIÓN:\r\n                      </h4>\r\n                      <Calendar c={this} />\r\n                    </GridItem>\r\n                  </GridContainer>\r\n\r\n                  <GridContainer>\r\n                    <Button id='btnPagar' color=\"success\" \r\n                      style={{\r\n                        display: \"flex\",\r\n                        flex: 1,\r\n                        alignItems: \"center\"\r\n                      }} \r\n                      onClick={this.handdleUp}\r\n                      disabled={expiro===\"0\"||bandGen}\r\n                      >\r\n                        PAGAR\r\n                      </Button>\r\n                  </GridContainer>\r\n                  <GridContainer>\r\n                    <Button color=\"danger\" \r\n                      style={{\r\n                        display: \"flex\",\r\n                        flex: 1,\r\n                        alignItems: \"center\"\r\n                      }} \r\n                      onClick={this.handdleDel}\r\n                      disabled={expiro!==\"0\"||bandGen}\r\n                      >\r\n                        CANCELAR PAGO\r\n                      </Button>\r\n                  </GridContainer>\r\n                  <GridContainer>\r\n                    <a style={{color: 'white',\r\n                      display: \"flex\",\r\n                      flex: 1,\r\n                      alignItems: \"center\"}} href={this.state.url} download={`${nDoc}.pdf`}>  \r\n                      <Button color=\"info\" \r\n                      style={{\r\n                        display: \"flex\",\r\n                        flex: 1,\r\n                        alignItems: \"center\"\r\n                      }} >\r\n                        Descargar PDF\r\n                      </Button>\r\n                    </a>  \r\n                  </GridContainer>  \r\n                  <MobileView>\r\n                    <div id='mobilePdf' style={{ position: 'relative', top: 20, width: '100%' }} ></div>\r\n                    \r\n                  </MobileView>\r\n\r\n                  <PDFViewer id='pdfView' style={{ width: '100%', height: 1180 }}  >\r\n                  <Document shallow onRender={this.onRender} title={`${nDoc}.pdf`} >\r\n                    <Page size=\"letter\" wrap>\r\n                      <Image src={LogoI} style={this.styles.logoI} />\r\n                      <View style={this.styles.headV} >\r\n                        <Text style={[this.styles.headO,{position: \"relative\", top: 10, fontSize: 10}]} >\r\n                          INTERRED\r\n                        </Text>\r\n                        <Text style={[this.styles.headO,{position: \"relative\", top: 10, fontSize: 10}]} >\r\n                          INTERNET POR CABLE E INALÁMBRICO\r\n                        </Text>\r\n                        <Text style={[{position: \"absolute\", top: 10, left: 220, fontSize: 7}]} >\r\n                          CORREO ELECTRÓNICO: CASMORNEZA@GMAIL.COM \r\n                        </Text>\r\n                        <Text style={[{position: \"absolute\", top: 20, left: 220, fontSize: 7}]} >\r\n                          DIRECCIÓN: CALLE DEL CAMPESINO S/N.\r\n                        </Text>\r\n                        <Text style={[{position: \"absolute\", top: 30, left: 220, fontSize: 7}]} >\r\n                          COLONIA EMILIANO ZAPATA.\r\n                        </Text>\r\n                        \r\n                      </View>\r\n                     <View style={this.styles.headT} >\r\n                      <Text style={[{ fontSize: 12}]} >\r\n                          RECIBO DE PAGO\r\n                      </Text>\r\n                     </View>\r\n                     <View style={[this.styles.table, {top: 75, left: 320}]}> \r\n                        <View style={this.styles.tableRow}> \r\n                          <View style={[this.styles.tableCol,{width: '50%', borderColor: 'white', backgroundColor: 'black'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2, color: 'white'}]}>RECIBO NÚMERO</Text> \r\n                          </View>\r\n                          <View style={[this.styles.tableCol,{width: '50%', borderColor: 'white', backgroundColor: 'black'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2, color: 'white'}]}>FECHA DE PAGO</Text> \r\n                          </View> \r\n                        </View>\r\n                        <View style={this.styles.tableRow}> \r\n                          <View style={[this.styles.tableCol,{width: '50%'}]}>  \r\n                          <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2}]}>{idCliente}</Text> \r\n                          </View>\r\n                          <View style={[this.styles.tableCol,{width: '50%'}]}>  \r\n                    <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2}]}>{fechaPago}</Text> \r\n                          </View> \r\n                        </View>\r\n                      </View>\r\n                      <View style={[this.styles.table, {top: 85, left: 443, width: '20%'}]}> \r\n                        \r\n                        <View style={this.styles.tableRow}> \r\n                          <View style={[this.styles.tableCol,{width: '50%'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2}]}>CANTIDAD:</Text> \r\n                          </View>\r\n                          <View style={[this.styles.tableCol,{width: '50%'}]}>  \r\n                    <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2, textAlign: 'left'}]}>$ {parseInt(difDate)===1?`${difDate} mes`:`${difDate} meses`}</Text> \r\n                          </View> \r\n                        </View>\r\n                      </View>  \r\n\r\n                      <View style={[this.styles.table, {top: 100, left: 20, width: '90%'}]}> \r\n                        <View style={this.styles.tableRow}> \r\n                          <View style={[this.styles.tableCol,{width: '30%', borderColor: 'white', backgroundColor: 'black'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2, color: 'white', textAlign: 'left'}]}>NOMBRE DEL CLIENTE:</Text> \r\n                          </View>\r\n                          <View style={[this.styles.tableCol,{width: '70%'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2}]}>{nombre}</Text> \r\n                          </View> \r\n                        </View>\r\n                        <View style={this.styles.tableRow}> \r\n                          <View style={[this.styles.tableCol,{width: '30%', borderColor: 'white', backgroundColor: 'black'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2, color: 'white', textAlign: 'left'}]}>UBICACIÓN:</Text> \r\n                          </View>\r\n                          <View style={[this.styles.tableCol,{width: '70%'}]}>  \r\n                    <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2}]}>{ubi}</Text> \r\n                          </View> \r\n                        </View>\r\n                        <View style={this.styles.tableRow}> \r\n                          <View style={[this.styles.tableCol,{width: '30%', borderColor: 'white', backgroundColor: 'black'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2, color: 'white', textAlign: 'left'}]}>PERIODO DE PAGO:</Text> \r\n                          </View>\r\n                          <View style={[this.styles.tableCol,{width: '70%'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2}]}>{fechaSI+\" > \"+fechaSF}</Text> \r\n                          </View> \r\n                        </View>\r\n                      </View>\r\n                      <View style={[this.styles.table, {top: 120, left: 20, width: '40%'}]}> \r\n                        \r\n                        <View style={this.styles.tableRow}> \r\n                          <View style={[this.styles.tableCol,{width: '30%'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2}]}>A PAGAR:</Text> \r\n                          </View>\r\n                          <View style={[this.styles.tableCol,{width: '70%'}]}>  \r\n                            <Text style={[this.styles.tableCell,this.styles.headO,{paddingVertical: 2, textAlign: 'left'}]}>$ {monto}</Text> \r\n                          </View> \r\n                        </View>\r\n                      </View>\r\n                      <View style={[this.styles.headV, {top: 150, left: 20}]} >\r\n                        <Text style={[this.styles.headO,{position: \"relative\", fontSize: 10, width: '90%'}]} >\r\n                          Le recordamos realizar su pago, antes de su fecha límite, sí tu mensualidad se venció y no cuentas con el servicio, al realizar tu pago tendrá que esperar un aproximado de 24 horas para que su señal vuelva a reactivarse INTERRED AGRADECE TU PREFERENCIA Navega más rápido...............................................................................\r\n                        </Text>\r\n                        \r\n                      </View>\r\n                      {/*<Image src={pie} style={this.styles.pie} />*/}\r\n                     \r\n                    </Page>\r\n                  </Document>\r\n                  </PDFViewer>\r\n                </React.Fragment>\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </CardIcon>\r\n    );\r\n  }\r\n}\r\nexport default App;","D:\\USER\\Documents\\interred\\src\\variables\\charts.js",[],"D:\\USER\\Documents\\interred\\src\\views\\Dashboard\\decrypt.js",["311"],"export default (s) => {\r\n    const key = 1\r\n    let c = 0;\r\n    let result = ''\r\n    \r\n    while (c < s.length) {\r\n        const code = s.charCodeAt(c) >> key\r\n        const charS = String.fromCharCode(code);\r\n        result += charS;\r\n        c++;\r\n    }\r\n    //console.log(`Dec: ${result}`)\r\n    return result;\r\n}","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\views\\dashboardStyle.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\listItemStyle.js",[],"D:\\USER\\Documents\\interred\\src\\views\\clientes\\GenExpHTML.js",["312","313","314","315","316"],"import React from \"react\";\r\nimport WN from \"@material-ui/icons/Warning\"\r\nexport default (props) => {\r\n    const {c,refRow} = props\r\n    //const {openExpireDash, opExp} = c.state\r\n    const [openExpireDash, setOpenExpireDash] = React.useState(null)\r\n    const [opExp, setOpExp] = React.useState(0);\r\n        \r\n  return (<><WN color='error' \r\n                      aria-label=\"edit\"\r\n                      aria-owns={openExpireDash ? \"profile-menu-list-grow\" : null}\r\n                      aria-haspopup=\"true\"\r\n                      justIcon \r\n            />\r\n            <div ref={refRow} style={{position: 'absolute', opacity:0, paddingTop:15, backgroundColor: 'red', zIndex:9999, alignContent:'center', height: 50, borderRadius: 20, boxShadow: \"4px 4px 4px 2px rgba(1, 1, 1, 0.2)\",  borderWidth: 0.5, borderColor: 'black', elevation: 2}}>\r\n                    <WN color=\"inherit\"  \r\n                    /> <i style={{color:'white'}} >¡ADVERTENCÍA! Él número de cliente presenta un adeudo, favor de hacer el pago.</i>\r\n            </div>\r\n    </>)\r\n\r\n}","D:\\USER\\Documents\\interred\\src\\components\\CustomInput\\CustomInput.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Card\\CardBody.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Card\\CardHeader.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Card\\CardIcon.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Card\\Card.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Grid\\GridItem.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Grid\\GridContainer.js",[],"D:\\USER\\Documents\\interred\\src\\components\\CustomButtons\\Button.js",[],"D:\\USER\\Documents\\interred\\src\\components\\Table\\TableClientes.js",["317","318","319","320","321","322","323"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport cookie from \"react-cookies\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckBox from '@material-ui/icons/Check';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport encrypt from \"views/Dashboard/encrypt\";\r\nimport GridContainer from \"components/Grid/GridContainer\";\r\nimport {Calendar} from \"views/calendar\"\r\nimport {editCliente} from \"views/clientes/methods\"\r\nimport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, tableHead, tableHeaderColor, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    \r\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              {tableHead.map((row, index) => {\r\n                return (\r\n                  <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={row.id}\r\n                    sortDirection={orderBy === row.id ? order : false}\r\n                    rowSpan='2'\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === row.id}\r\n                      direction={order}\r\n                      onClick={createSortHandler(row.id)} \r\n                      >\r\n                    {row.label}\r\n                    </TableSortLabel>\r\n                  </TableCell>\r\n                );\r\n              })\r\n            }\r\n              {/*\r\n              <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={tableHead[0].id}\r\n                    sortDirection={orderBy === tableHead[0].id ? order : false}\r\n                    rowSpan='2'\r\n                    valign='baseline'\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === tableHead[0].id}\r\n                      direction={order}\r\n                      valign = 'bottom'\r\n                      onClick={createSortHandler(tableHead[0].id)} \r\n                    >\r\n                    {tableHead[0].label}\r\n                    </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={tableHead[1].id}\r\n                    sortDirection={orderBy === tableHead[1].id ? order : false}\r\n                    rowSpan='2'\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === tableHead[1].id}\r\n                      direction={order}\r\n                      onClick={createSortHandler(tableHead[1].id)} \r\n                      >\r\n                    {tableHead[1].label}\r\n                    </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={tableHead[2].id}\r\n                    sortDirection={orderBy === tableHead[2].id ? order : false}\r\n                    rowSpan='2'\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === tableHead[2].id}\r\n                      direction={order}\r\n                      onClick={createSortHandler(tableHead[2].id)} \r\n                      >\r\n                    {tableHead[2].label}\r\n                    </TableSortLabel>\r\n              </TableCell>\r\n              \r\n              <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={tableHead[3].id}\r\n                    sortDirection={orderBy === tableHead[3].id ? order : false}\r\n                    rowSpan='2'\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === tableHead[3].id}\r\n                      direction={order}\r\n                      onClick={createSortHandler(tableHead[3].id)} \r\n                      >\r\n                    {tableHead[3].label}\r\n                    </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    colSpan='2'\r\n                    align='center'\r\n              >\r\n                    {'Propiedad'}\r\n              </TableCell>\r\n              \r\n            </TableRow>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              \r\n              <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={tableHead[4].id}\r\n                    sortDirection={orderBy === tableHead[4].id ? order : false}\r\n                    rowSpan='2'\r\n                    align='center'\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === tableHead[4].id}\r\n                      direction={order}\r\n                      onClick={createSortHandler(tableHead[4].id)} \r\n                      >\r\n                    {tableHead[4].label}\r\n                    </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={tableHead[5].id}\r\n                    sortDirection={orderBy === tableHead[5].id ? order : false}\r\n                    rowSpan='2'\r\n                    align = 'center'\r\n                  >\r\n                    <TableSortLabel\r\n                      active={orderBy === tableHead[5].id}\r\n                      direction={order}\r\n                      onClick={createSortHandler(tableHead[5].id)} \r\n                      >\r\n                    {tableHead[5].label}\r\n                    </TableSortLabel>\r\n              </TableCell>\r\n              */}\r\n            </TableRow>\r\n          </TableHead>\r\n  );\r\n}\r\nconst genCTA = (idCliente, nombre, ubi, fecha, monto, velocidad, idVelocidad, dateSI, dateSF, difDate, expiro, idRecibo) => {\r\n  //const idRol = cookie.load('idRol')\r\n  const idRol = \"1\";\r\n  let url = idRol === '1' ? `/admin/listaClientes` : `/usuario/listaClientes` \r\n  let subUrl = `?bandCTA=1&idCliente=${idCliente}&nombre=${nombre}&ubi=${ubi}&fecha=${fecha}&dateSI=${dateSI}&dateSF=${dateSF}&monto=${monto}&idVelocidad=${idVelocidad}&velocidad=${velocidad}&difDate=${difDate}&expiro=${expiro}&pagar=0&idRecibo=${idRecibo}`\r\n  //console.log(subUrl)\r\n  url += `?v=${encrypt(subUrl)}`;\r\n  //window.history.pushState(null,'Administrador','#/admin/creditos')\r\n    //       window.history.go()\r\n  const win = window.open(url, '_blank');\r\n  win.focus();\r\n}\r\nconst genCarta = (CTA, nombre, ubi, tp) => {\r\n  const idRol = cookie.load('idRol')\r\n  let url = idRol === '1' ? `#/admin/padron` : `#/usuario/padron`\r\n  const y = new Date().getFullYear()\r\n  let subUrl = `?bandCarta=1&genCTA=${CTA}&nombre=${nombre}&ubi=${ubi}&tp=${tp}`\r\n  subUrl+=`&añoI=${y}&añoF=${y}`\r\n  url += `?v=${encrypt(subUrl)}`;\r\n  const win = window.open(url, '_blank');\r\n  win.focus();\r\n}\r\nclass wrappCalendar {\r\n  tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n  dateSI = new Date(Date.now() - this.tzoffset);\r\n  dateSF = new Date(Date.now() - this.tzoffset);\r\n  idUsuario=0;\r\n  bandWrappCalendar = true;\r\n  constructor(props){\r\n   // super(props);\r\n    //corte.options.high = 1000000\r\n    //corte.data.labels = [\"ENERO\", \"FEBRERO\", \"MARZO\", \"ABRIL\", \"MAYO\", \"JUNIO\", \"JULIO\", \"AGOSTO\", \"SEPTIEMBRE\", \"OCTUBRE\", \"NOVIEMBRE\", \"DICIEMBRE\"]\r\n    //corte.data.series = [[]]\r\n    this.tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n    this.dateSI = new Date(Date.now() - this.tzoffset);\r\n    this.dateSF = new Date(Date.now() - this.tzoffset);\r\n    this.dateSI.setHours(0,0,0,0);\r\n    this.dateSF.setHours(0,0,0,0);\r\n    const d = new Date();\r\n    this.state={\r\n      idCliente: props.idCliente,\r\n      idRecibo: props.idRecibo,\r\n      nombre: props.nombre,\r\n      telefono: props.telefono,\r\n      ubi: props.ubi, \r\n      fechaSI: props.dateSI,\r\n      fechaSF: props.dateSF,\r\n      fechaPago: props.fechaPago,\r\n      monto: props.monto, \r\n      difDate: props.difDate,\r\n      idVelocidad: props.idVelocidad,\r\n      velocidad: props.velocidad,\r\n      bandLock: props.bandLock\r\n    }\r\n    \r\n  }\r\n  _setState=(v)=>{\r\n    const {fechaSI, fechaSF, monto, difDate, idVelocidad, bandLock} = v\r\n    const {nombre, telefono, ubi, fechaPago} = this.state;\r\n    editCliente(this,nombre,telefono,ubi,idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago, true);\r\n    this.state.fechaSI = fechaSI;\r\n    this.state.fechaSF = fechaSF;\r\n    this.state.monto = monto;\r\n    this.state.difDate = difDate;\r\n    this.state.idVelocidad = idVelocidad;\r\n    this.state.bandLock = bandLock;\r\n\r\n    //this.setState({fechaSI, fechaSF, monto, difDate, idVelocidad});\r\n  }\r\n}\r\nexport default function CustomTable(props) {\r\n  \r\n  const classes = useStyles();\r\n  const { tableHead, tableData, tableHeaderColor, c } = props;\r\n  const [dense, setDense] = React.useState(false);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('ID');\r\n\r\n  const rows = tableData;\r\n  const {bandLock} = props.c\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  //const c = new wrappCalendar();\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const theme = useTheme();\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  };\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  };\r\n  \r\n  //let wrapC = null\r\n\r\n  try{\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      <Table className={classes.table}>\r\n        {tableHead !== undefined ? (\r\n        <EnhancedTableHead\r\n              classes={classes}\r\n              tableHeaderColor={tableHeaderColor}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              tableHead={tableHead}\r\n            //  onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n        />): null}\r\n        \r\n        <TableBody>\r\n          { \r\n            stableSort(rows, getSorting(order, orderBy))\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n              //console.log(row)\r\n              try{\r\n                const wrapC = new wrappCalendar({idCliente: row.key,idRecibo: row.idRecibo, nombre: row.cliente, telefono: row.telefono, ubi: row.ubi,  \r\n                                          dateSI: row.dateSI, dateSF: row.dateSF, fechaPago: row.fechaDePago, idVelocidad: row.idVelocidad, monto: row.montor, difDate: row.difDate, bandLock\r\n                                          ,velocidad: row.velocidad      });\r\n               // const [idVelocidad, setIdVelocidad] = React.useState(row.idVelocidad);\r\n               // const [velocidad, setVelocidad] = React.useState(row.velocidad);\r\n            return (\r\n              <TableRow key={row.key}  \r\n              onMouseEnter={()=>{\r\n                                      //      console.log(row.refRow)\r\n                                            if(row.refRow&&row.refRow.current){\r\n                                                row.refRow.current.style.opacity = 1;\r\n                                            }\r\n              }}\r\n              onMouseLeave={()=>{\r\n                if(row.refRow&&row.refRow.current){\r\n                  row.refRow.current.style.opacity = 0;\r\n                }\r\n              }} \r\n        className={classes.tableBodyRow}>\r\n                <TableCell className={classes.tableCell} style={{textAlign: 'center', \r\n                WebkitTransition: 'all 0.7s ease-out',\r\n                transition: 'all 0.7s ease-out'}}\r\n                  onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  onMouseUp={(e)=>{\r\n                    e.currentTarget.style.webkitTransition=\"all 0.7s ease-out\";\r\n                    e.currentTarget.style.transition=\"all 0.7s ease-out\";\r\n                    if(bandLock){\r\n                      genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)\r\n                    }else{\r\n\r\n                    }\r\n                    }} >\r\n                  {row.key}\r\n                  <Zoom\r\n                    //key={fab.color}\r\n                    in={!bandLock}\r\n                    onClick={(e)=>{\r\n                  //  console.log(e)\r\n                    c.deleteStack[row.key]=row.key\r\n                    if(e.target.nodeName!==\"BUTTON\"){\r\n                      e=e.target.parentElement\r\n                      while(e.nodeName!==\"BUTTON\"){\r\n                        e=e.parentElement\r\n                      }\r\n                    }else{\r\n                      e=e.target\r\n                    }\r\n                    if(e.id===\"checked\"+row.key){\r\n                          e.id=\"\"\r\n                          e.style.opacity=0.5\r\n                        }else{\r\n                          e.id=\"checked\"+row.key\r\n                          e.style.opacity=1\r\n                        }\r\n                      /*\r\n                      if(e.target.childElementCount===1){\r\n                        if(e.target.parentElement.id===\"checked\"+row.key){\r\n                          e.target.parentElement.id=\"\"\r\n                          e.target.parentElement.style.opacity=0.5\r\n                        }else{\r\n                          e.target.parentElement.id=\"checked\"+row.key\r\n                        }\r\n                      }\r\n\r\n                      if(e.target.childElementCount===2){\r\n                        if(e.target.id===\"checked\"+row.key){\r\n                          e.target.id=\"\"\r\n                          e.target.style.opacity=0.5\r\n                        }else{\r\n                          e.target.id=\"checked\"+row.key\r\n                        }\r\n                      }*/\r\n\r\n                    }}\r\n                    onMouseEnter={(e)=>{//console.log(e)\r\n                      if(e.target.nodeName!==\"BUTTON\"){\r\n                        e=e.target.parentElement\r\n                        while(e.nodeName!==\"BUTTON\"){\r\n                          e=e.parentElement\r\n                        }\r\n                      }else{\r\n                        e=e.target\r\n                      }\r\n                      e.style.opacity=1\r\n                      /*if(e.target.childElementCount===0){\r\n                        e.target.parentElement.parentElement.style.opacity=1\r\n                      }\r\n\r\n                      if(e.target.childElementCount===1){\r\n                        e.target.parentElement.style.opacity=1\r\n                      }\r\n\r\n                      if(e.target.childElementCount===2){\r\n                        e.target.style.opacity=1\r\n                      }*/\r\n                    }}\r\n                    onMouseLeave={\r\n                      (e)=>{\r\n                        if(e.target.nodeName!==\"BUTTON\"){\r\n                        e=e.target.parentElement\r\n                        while(e.nodeName!==\"BUTTON\"){\r\n                          e=e.parentElement\r\n                        }\r\n                      }else{\r\n                        e=e.target\r\n                      }\r\n                      if(e.id===\"\"){\r\n                            e.style.opacity=0.5\r\n                      }\r\n                        /*if(e.target.childElementCount===0){\r\n                          if(e.target.parentElement.parentElement.id===\"\"){\r\n                            e.target.parentElement.parentElement.style.opacity=0.5\r\n                          }\r\n                        }\r\n\r\n                      if(e.target.childElementCount===1){\r\n                        if(e.target.parentElement.id===\"\"){\r\n                          e.target.parentElement.style.opacity=0.5\r\n                        }\r\n                      }\r\n\r\n                      if(e.target.childElementCount===2){\r\n                        if(e.target.id===\"\"){\r\n                          e.target.style.opacity=0.5\r\n                        }\r\n                      }*/\r\n\r\n                      }\r\n                    }\r\n                    timeout={transitionDuration}\r\n                    style={{\r\n                      transitionDelay: `${!bandLock?transitionDuration.exit:\"0\"}ms`,\r\n                      opacity: 0.5\r\n                    }}\r\n                    unmountOnExit\r\n                  >\r\n                  <Fab color=\"primary\" aria-label=\"add\">\r\n                        <CheckBox />\r\n                  </Fab>\r\n                </Zoom>\r\n                  \r\n                </TableCell>\r\n                <TableCell className={classes.tableCell} \r\n                  onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  onMouseUp={(e)=>{genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)}} >\r\n                  {row.cliente}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}\r\n                  onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  onMouseUp={(e)=>{genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)}}>\r\n                  {row.telefono}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}\r\n                  onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  onMouseUp={(e)=>{genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)}}>\r\n                  {row.ubi}\r\n                </TableCell>\r\n                {/*<TableCell className={classes.tableCell}\r\n                  onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  onMouseUp={(e)=>{genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)}}>\r\n                  {row.dateSI?row.dateSI:(<i>Sin recibo</i>)}\r\n            </TableCell>*/}\r\n                <TableCell className={classes.tableCell}\r\n                  //onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  //onMouseUp={(e)=>{genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)}}\r\n                  >\r\n                  <><h4 className={classes.cardTitleBlack} style={{color: 'red'}}>\r\n                       {row.dateSF}\r\n                    </h4>\r\n                      <Calendar c={wrapC} /*c={()=>{\r\n                                   wrapC = new wrappCalendar({idCliente: row.key,idRecibo: row.idRecibo, nombre: row.cliente, telefono: row.telefono, ubi: row.ubi,  \r\n                                          dateSI: row.dateSI, dateSF: row.dateSF, fechaPago: row.fechaDePago, idVelocidad: row.idVelocidad, monto: row.montor, difDate: row.difDate, bandLock\r\n                                  });\r\n\r\n                                  return wrapC\r\n                                }}*/ \r\n                         />\r\n                  </>\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}\r\n                  onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  //onMouseUp={(e)=>{genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)}}\r\n                >\r\n                  {\r\n                    //row.fechaPago?row.fechaPago:(row.fechaDePago?row.fechaDePago:(<i>Sin recibo</i>))\r\n                  }\r\n                  <h4 id=\"fechaPagoH\" className={classes.cardTitleBlack} style={{color: (row.fechaDePago?'green':'red') }}>\r\n                        {row.fechaPago?row.fechaPago:(row.fechaDePago?row.fechaDePago:(<i>Sin recibo</i>))}\r\n                  </h4>\r\n                      \r\n                       <Calendar c={wrapC} bandRange={true} />\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}\r\n                  onMouseEnter={(e)=>{e.target.style.cursor='pointer'}}\r\n                  onMouseUp={(e)=>{genCTA(row.key,row.cliente,row.ubi,row.fechaDePago,row.montor,row.velocidad,row.idVelocidad,row.dateSI,row.dateSF,row.difDate,row.expiro,row.idRecibo)}}>\r\n                  <div id={`row.monto[${row.key}]`}  >\r\n                    {row.monto?row.monto:(row.montor?row.montor:(<i>Sin recibo</i>))}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}>\r\n                  <GridContainer> \r\n                    \r\n                    <UncontrolledDropdown style={{position: 'relative', left: 0}}>\r\n                      <DropdownToggle\r\n                          caret\r\n                          className=\"btn-icon\"\r\n                          color=\"link\"\r\n                          data-toggle=\"dropdown\"\r\n                          type=\"button\"\r\n                          style={{width: 110,height:90, top: -20}}\r\n                        >\r\n                      <div id={`row.velocidad[${row.key}]`}  >    \r\n                        {row.velocidad?row.velocidad:(<i>0 MEGAS</i>)}\r\n                      </div>\r\n                        </DropdownToggle>\r\n                        {/*<DropdownToggle\r\n                          caret\r\n                          className=\"btn-icon\"\r\n                          color=\"link\"\r\n                          data-toggle=\"dropdown\"\r\n                          type=\"button\"\r\n                        >\r\n                          <i className=\"tim-icons icon-settings-gear-63\" />\r\n                        </DropdownToggle>*/}\r\n                        {!bandLock &&\r\n                        <DropdownMenu aria-labelledby=\"dropdownMenuLink\" left>\r\n                          <DropdownItem\r\n                            style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              wrapC.state.idVelocidad=0;\r\n                              wrapC.state.monto=150*wrapC.state.difDate;\r\n                              document.getElementById(`row.velocidad[${row.key}]`).innerHTML=\"10 MEGAS\";\r\n                              document.getElementById(`row.monto[${row.key}]`).innerHTML=wrapC.state.monto;\r\n                              const {fechaSI , fechaSF, monto, difDate, idVelocidad, bandLock} = wrapC.state\r\n                              const v = {fechaSI , fechaSF, monto, difDate, idVelocidad, bandLock}\r\n                              wrapC._setState(v);\r\n                              //row.velocidad=\"10 MEGAS\"\r\n                              //setVelocidad(\"10 MEGAS\")\r\n                              //wrapC.state.velocidad='10 MEGAS';\r\n                             // setPage(page);\r\n                              /*let difDate = 0\r\n                              let pagar = 0;\r\n                              const {fechaSI, fechaSF} = this.state\r\n                              const dateA = new Date(fechaSI);\r\n                              const dateB = new Date(fechaSF);\r\n                              //const {idVelocidad} = this.state;\r\n                              while(dateA<dateB){\r\n                                dateA.setMonth(dateA.getMonth()+1);\r\n                                difDate++;\r\n                              }*/\r\n                             // this.setTotal(150,0,e.target.innerHTML)\r\n                            \r\n                            }}\r\n                          >\r\n                            10 MEGAS\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                           style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                             // this.setTotal(250,1,e.target.innerHTML)\r\n                             wrapC.state.idVelocidad=1;\r\n                             wrapC.state.monto=250*wrapC.state.difDate;\r\n                              document.getElementById(`row.velocidad[${row.key}]`).innerHTML=\"20 MEGAS\";\r\n                              document.getElementById(`row.monto[${row.key}]`).innerHTML=wrapC.state.monto;\r\n                              const {fechaSI , fechaSF, monto, difDate, idVelocidad, bandLock} = wrapC.state\r\n                              const v = {fechaSI , fechaSF, monto, difDate, idVelocidad, bandLock}\r\n                              wrapC._setState(v);\r\n                            }}\r\n                          >\r\n                            20 MEGAS\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              //this.setTotal(300,2,e.target.innerHTML)\r\n                              wrapC.state.idVelocidad=2;\r\n                              wrapC.state.monto=300*wrapC.state.difDate;\r\n                              document.getElementById(`row.velocidad[${row.key}]`).innerHTML=\"30 MEGAS\";\r\n                              document.getElementById(`row.monto[${row.key}]`).innerHTML=wrapC.state.monto;\r\n                              const {fechaSI , fechaSF, monto, difDate, idVelocidad, bandLock} = wrapC.state\r\n                              const v = {fechaSI , fechaSF, monto, difDate, idVelocidad, bandLock}\r\n                              wrapC._setState(v);\r\n                            \r\n                            }}\r\n                          >\r\n                            30 MEGAS\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                        }\r\n                      </UncontrolledDropdown>\r\n                      \r\n                  </GridContainer>\r\n                </TableCell>\r\n               {/* <TableCell align=\"center\" className={classes.tableCell}>\r\n                  {row.terreno}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tableCell}>\r\n                  {row.construccion}\r\n                </TableCell>*/}\r\n\r\n              </TableRow>\r\n            );\r\n            }catch(e){\r\n\r\n            }\r\n          })}\r\n          {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 48) * emptyRows }} >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          labelRowsPerPage = {`Filas por página:`}\r\n          labelDisplayedRows={(_ref)=>{\r\n            var from = _ref.from,\r\n              to = _ref.to,\r\n              count = _ref.count;\r\n            return \"\".concat(from, \"-\").concat(to, \" de \").concat(count);\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    </div>\r\n  );\r\n  }catch(e){\r\n    return(<></>)\r\n  }\r\n}\r\n\r\nCustomTable.defaultProps = {\r\n  tableHeaderColor: \"gray\"\r\n};\r\n\r\nCustomTable.propTypes = {\r\n  tableHeaderColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  tableHead: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)),\r\n  tableData: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any))\r\n};\r\n","D:\\USER\\Documents\\interred\\src\\views\\Dashboard\\spellNumber.js",["324","325","326","327","328","329","330","331","332"],"function Unidades(num) {\r\n\r\n    switch(num)\r\n    {\r\n        case 1: return \"UN\";\r\n        case 2: return \"DOS\";\r\n        case 3: return \"TRES\";\r\n        case 4: return \"CUATRO\";\r\n        case 5: return \"CINCO\";\r\n        case 6: return \"SEIS\";\r\n        case 7: return \"SIETE\";\r\n        case 8: return \"OCHO\";\r\n        case 9: return \"NUEVE\";\r\n    }\r\n\r\n    return \"\";\r\n}//Unidades()\r\n\r\nfunction Decenas(num){\r\n\r\n   const decena = Math.floor(num/10);\r\n   const unidad = num - (decena * 10);\r\n\r\n    switch(decena)\r\n    {\r\n        case 1:\r\n            switch(unidad)\r\n            {\r\n                case 0: return \"DIEZ\";\r\n                case 1: return \"ONCE\";\r\n                case 2: return \"DOCE\";\r\n                case 3: return \"TRECE\";\r\n                case 4: return \"CATORCE\";\r\n                case 5: return \"QUINCE\";\r\n                default: return \"DIECI\" + Unidades(unidad);\r\n            }\r\n        case 2:\r\n            switch(unidad)\r\n            {\r\n                case 0: return \"VEINTE\";\r\n                default: return \"VEINTI\" + Unidades(unidad);\r\n            }\r\n        case 3: return DecenasY(\"TREINTA\", unidad);\r\n        case 4: return DecenasY(\"CUARENTA\", unidad);\r\n        case 5: return DecenasY(\"CINCUENTA\", unidad);\r\n        case 6: return DecenasY(\"SESENTA\", unidad);\r\n        case 7: return DecenasY(\"SETENTA\", unidad);\r\n        case 8: return DecenasY(\"OCHENTA\", unidad);\r\n        case 9: return DecenasY(\"NOVENTA\", unidad);\r\n        case 0: return Unidades(unidad);\r\n    }\r\n}//Unidades()\r\n\r\nfunction DecenasY(strSin, numUnidades) {\r\n    if (numUnidades > 0)\r\n    return strSin + \" Y \" + Unidades(numUnidades)\r\n\r\n    return strSin;\r\n}//DecenasY()\r\n\r\nfunction Centenas(num) {\r\n    const centenas = Math.floor(num / 100);\r\n    const decenas = num - (centenas * 100);\r\n\r\n    switch(centenas)\r\n    {\r\n        case 1:\r\n            if (decenas > 0)\r\n                return \"CIENTO \" + Decenas(decenas);\r\n            return \"CIEN\";\r\n        case 2: return \"DOSCIENTOS \" + Decenas(decenas);\r\n        case 3: return \"TRESCIENTOS \" + Decenas(decenas);\r\n        case 4: return \"CUATROCIENTOS \" + Decenas(decenas);\r\n        case 5: return \"QUINIENTOS \" + Decenas(decenas);\r\n        case 6: return \"SEISCIENTOS \" + Decenas(decenas);\r\n        case 7: return \"SETECIENTOS \" + Decenas(decenas);\r\n        case 8: return \"OCHOCIENTOS \" + Decenas(decenas);\r\n        case 9: return \"NOVECIENTOS \" + Decenas(decenas);\r\n    }\r\n\r\n    return Decenas(decenas);\r\n}//Centenas()\r\n\r\nfunction Seccion(num, divisor, strSingular, strPlural) {\r\n    const cientos = Math.floor(num / divisor)\r\n    const resto = num - (cientos * divisor)\r\n\r\n    let letras = \"\";\r\n\r\n    if (cientos > 0)\r\n        if (cientos > 1)\r\n            letras = Centenas(cientos) + \" \" + strPlural;\r\n        else\r\n            letras = strSingular;\r\n\r\n    if (resto > 0)\r\n        letras += \"\";\r\n\r\n    return letras;\r\n}//Seccion()\r\n\r\nfunction Miles(num) {\r\n    const divisor = 1000;\r\n    const cientos = Math.floor(num / divisor)\r\n    const resto = num - (cientos * divisor)\r\n\r\n    let strMiles = Seccion(num, divisor, \"UN MIL\", \"MIL\");\r\n    let strCentenas = Centenas(resto);\r\n\r\n    if(strMiles == \"\")\r\n        return strCentenas;\r\n\r\n    return strMiles + \" \" + strCentenas;\r\n}//Miles()\r\n\r\nfunction Millones(num) {\r\n    const divisor = 1000000;\r\n    const cientos = Math.floor(num / divisor)\r\n    const resto = num - (cientos * divisor)\r\n\r\n    let strMillones = Seccion(num, divisor, \"UN MILLON DE\", \"MILLONES DE\");\r\n    let strMiles = Miles(resto);\r\n\r\n    if(strMillones == \"\")\r\n        return strMiles;\r\n\r\n    return strMillones + \" \" + strMiles;\r\n}//Millones()\r\n\r\n\r\nexport default (num) => {\r\n    var data = {\r\n        numero: num,\r\n        enteros: Math.floor(num),\r\n        centavos: (((Math.round(num * 100)) - (Math.floor(num) * 100))),\r\n        letrasCentavos: \"\",\r\n        letrasMonedaPlural: 'PESOS',//“PESOS”, 'Dólares', 'Bolívares', 'etcs'\r\n        letrasMonedaSingular: 'PESO', //“PESO”, 'Dólar', 'Bolivar', 'etc'\r\n\r\n        letrasMonedaCentavoPlural: \"CENTAVOS\",\r\n        letrasMonedaCentavoSingular: \"CENTAVO\"\r\n    };\r\n\r\n    if (data.centavos > 0) {\r\n        data.letrasCentavos = \"CON \" + (function (){\r\n            if (data.centavos == 1)\r\n                return Millones(data.centavos) + \" \" + data.letrasMonedaCentavoSingular;\r\n            else\r\n                return Millones(data.centavos) + \" \" + data.letrasMonedaCentavoPlural;\r\n            })();\r\n    };\r\n\r\n    if(data.enteros == 0)\r\n        return \"CERO \" + data.letrasMonedaPlural + \" \" + data.letrasCentavos;\r\n    if (data.enteros == 1)\r\n        return Millones(data.enteros) + \" \" + data.letrasMonedaSingular + \" \" + data.letrasCentavos;\r\n    else\r\n        return Millones(data.enteros) + \" \" + data.letrasMonedaPlural + \" \" + data.letrasCentavos;\r\n}","D:\\USER\\Documents\\interred\\src\\variables\\ip.js",["333"],"export default (port) => {\r\n    const ip = 'localhost'\r\n    //const ip = '192.168.1.101'\r\n    const sendUri = `http://${ip}:${port}/`;\r\n    return sendUri\r\n}","D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\index.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\dropdownStyleB.js",[],"D:\\USER\\Documents\\interred\\src\\views\\calendar\\index.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\buttonStyle.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\genRecibo.js",["334","335","336","337"],"import ip from \"variables/ip\"\r\nimport decrypt from \"views/Dashboard/decrypt.js\";\r\nimport encrypt from \"views/Dashboard/encrypt.js\";\r\nconst genCTA = (idCliente, nombre, ubi, fecha, monto, velocidad, idVelocidad, dateSI, dateSF, difDate, expiro,idRecibo) => {\r\n    //const idRol = cookie.load('idRol')\r\n    const idRol = \"1\";\r\n    let url = idRol === '1' ? `/admin/listaClientes` : `/usuario/listaClientes`\r\n    let subUrl = `?bandCTA=1&idCliente=${idCliente}&nombre=${nombre}&ubi=${ubi}&fecha=${fecha}&dateSI=${dateSI}&dateSF=${dateSF}&monto=${monto}&idVelocidad=${idVelocidad}&velocidad=${velocidad}&difDate=${difDate}&expiro=${expiro}&pagar=0&idRecibo=${idRecibo}&isUpdated=1`\r\n    console.log(subUrl)\r\n    url += `?v=${encrypt(subUrl)}`;\r\n    //window.history.pushState(null,'Administrador','#/admin/creditos')\r\n      //       window.history.go()\r\n    const win = window.open(url,\"_self\");\r\n    win.focus();\r\n\r\n}\r\nfunction getParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n    if (!results) return '';\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n  }\r\nexport default async (c, nombre, ubi, monto, fechaPago, fechaSI, fechaSF) => {\r\n    try{\r\n    const {idCliente,difDate, velocidad, idVelocidad} = c.state\r\n    const sendUri = `${ip(\"2000\")}clientes/genRecibo`;\r\n    /*const dateA = new Date(fechaSI)\r\n    const dateB = new Date(fechaSF)\r\n    let difDate = 0;\r\n    while(dateA<dateB){\r\n        dateA.setMonth(dateA.getMonth()+1)\r\n        difDate++\r\n    }*/\r\n    \r\n    console.log(difDate)\r\n    console.log(\"cDate: \"+difDate)\r\n   // if()\r\n    //difDate = (new Date(fechaSI).getMonth()+1) - (difDate.getMonth()+1)\r\n      \r\n    const bodyJSON = {\r\n          idCliente: idCliente,\r\n          ubi,\r\n          monto,\r\n          fechaPago, \r\n          dateI: fechaSI,\r\n          dateF: fechaSF,\r\n          difDate,\r\n          idVelocidad \r\n\r\n    }\r\n    const response = await fetch(sendUri, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(bodyJSON)\r\n    });\r\n\r\n    const responseJson = await response.json().then(r => {\r\n        //alert(r.exito)\r\n        console.log(r)\r\n            if(r.exito){\r\n               // c.setState({nombre, ubi, pagar:monto,fechaPago, fechaSI, fechaSF,expiro:false});\r\n                let urlDec = getParameterByName('v');\r\n                urlDec = decrypt(urlDec);\r\n                //const velocidad = getParameterByName('velocidad', urlDec)\r\n                //const idVelocidad = getParameterByName('idVelocidad', urlDec)\r\n                //const difDate = getParameterByName('difDate', urlDec)\r\n                const idRecibo = r.clientes.insertId;\r\n                genCTA(idCliente, nombre, ubi, fechaPago, monto, velocidad, idVelocidad, fechaSI, fechaSF, difDate, 0,idRecibo)\r\n            }\r\n    });\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n}","D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardIconStyle.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"D:\\USER\\Documents\\interred\\src\\views\\Dashboard\\encrypt.js",["338"],"export default (s) => {\r\n    const key = 1\r\n    let c = 0;\r\n    let result = ''\r\n    while(c<s.length){\r\n        const code = s.charCodeAt(c) << key \r\n        const charS = String.fromCharCode(code);\r\n        result += charS;\r\n        c++\r\n    }\r\n   // console.log(`Enc: ${result}`)\r\n   \r\n    return result\r\n}","D:\\USER\\Documents\\interred\\src\\miwifi\\miwifi.js",[],["339","340"],"D:\\USER\\Documents\\interred\\src\\views\\calendar\\calendar.js",[],"D:\\USER\\Documents\\interred\\src\\miwifi\\lib\\Encrypt.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"D:\\USER\\Documents\\interred\\src\\assets\\jss\\material-dashboard-react\\components\\customInputStyle.js",[],"D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\delRecibo.js",["341","342","343","344","345","346"],"import ip from \"variables/ip\"\r\nimport decrypt from \"views/Dashboard/decrypt.js\";\r\nimport encrypt from \"views/Dashboard/encrypt.js\";\r\nconst genCTA = (idCliente, nombre, ubi, fecha, monto, velocidad, idVelocidad, dateSI, dateSF, difDate, expiro) => {\r\n    //const idRol = cookie.load('idRol')\r\n    const idRol = \"1\";\r\n    let url = idRol === '1' ? `/admin/listaClientes` : `/usuario/listaClientes`\r\n    let subUrl = `?bandCTA=1&idCliente=${idCliente}&nombre=${nombre}&ubi=${ubi}&fecha=${fecha}&dateSI=${dateSI}&dateSF=${dateSF}&monto=${monto}&idVelocidad=${idVelocidad}&velocidad=${velocidad}&difDate=${difDate}&expiro=${expiro}&pagar=0`\r\n    console.log(subUrl)\r\n    url += `?v=${encrypt(subUrl)}`;\r\n    //window.history.pushState(null,'Administrador','#/admin/creditos')\r\n      //       window.history.go()\r\n    const win = window.open(url,\"_self\");\r\n    win.focus();\r\n\r\n}\r\nfunction getParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n    if (!results) return '';\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n  }\r\nexport default async (c) => {\r\n    try{\r\n    const {idRecibo,idCliente, setMsg, setColor} = c.state\r\n    const sendUri = `${ip(\"2000\")}clientes/delRecibo`;\r\n    const bodyJSON = {\r\n          idRecibo,idCliente\r\n    }\r\n    const response = await fetch(sendUri, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(bodyJSON)\r\n    });\r\n\r\n    const responseJson = await response.json().then(r => {\r\n        //alert(r.exito)\r\n        setMsg(\"El Pago se eliminó con éxito...\")\r\n        setColor(\"danger\")\r\n            if(r.adeuda){\r\n                c.setState({bandGen: false,expiro: \"1\"});\r\n            }else{\r\n                c.setState({bandGen: false,expiro: \"u\"});\r\n            }\r\n    });\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n}","D:\\USER\\Documents\\interred\\src\\views\\clientes\\addClientes.js",["347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  UncontrolledAlert\r\n} from \"reactstrap\";\r\nimport ClientesAddForm from \"./ClientesAddForm\"\r\n// core components\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4\r\n} from \"variables/charts.js\";\r\n\r\nimport TablesClientes from \"./TablesClientes.js\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport stylesM from \"assets/jss/material-dashboard-react/components/listItemStyle.js\";\r\nimport decrypt from \"views/Dashboard/decrypt.js\";\r\nimport Pdf from \"./renderRecibo\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStylesM = makeStyles(stylesM);\r\nfunction getParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n    results = regex.exec(url);\r\n  if (!results) return '';\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\nexport default () => {\r\n\r\n  //\r\n  //const [color, setColor] = React.useState(\"\")\r\n  /*constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bigChartData: \"data1\"\r\n    };\r\n  }*/\r\n  const classes = useStyles();\r\n  const classesM = useStylesM();\r\n  let urlDec = getParameterByName('v');\r\n  urlDec = decrypt(urlDec);\r\n  \r\n  const [state, setState] = React.useState({bigChartData: 'data2'})\r\n  const setBgChartData = name => {\r\n    /*this.setState({\r\n      bigChartData: name\r\n    });*/\r\n  };\r\n  let msgV = \"\"\r\n  let colorV = \"\"\r\n  const [msg, setMsg] = React.useState(msgV)\r\n  const [color, setColor] = React.useState(colorV)\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n        {msg!==\"\"&&\r\n        <UncontrolledAlert color={color} >\r\n            <span>{msg}</span>\r\n        </UncontrolledAlert>}\r\n          <Row>\r\n            <Col xs=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <h5 className=\"card-category\">Clientes</h5>\r\n                      <CardTitle tag=\"h2\">REGISTRAR</CardTitle>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data1\"\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            window.history.pushState(null,'Administrador','/admin/listaClientes')\r\n                            window.history.go()\r\n                          }}\r\n                        >\r\n                          <input\r\n                            \r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Registrados\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-single-02\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data2\"\r\n                          })}\r\n                          onClick={() => setBgChartData(\"data2\")}\r\n                        >\r\n                          <input\r\n                          defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Registrar Clientes\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-gift-2\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"2\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data3\"\r\n                          })}\r\n                          onClick={() => {\r\n                            window.history.pushState(null,'Administrador','/admin/editarCliente')\r\n                            window.history.go()\r\n                          }}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Editar Cliente\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-tap-02\" />\r\n                          </span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div >\r\n                    <ClientesAddForm classes={classes} classesM={classesM} setMsg={setMsg} setColor={setColor} />                 \r\n                    {/*<Line\r\n                      data={chartExample1[this.state.bigChartData]}\r\n                      options={chartExample1.options}\r\n                    />*/}\r\n\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n         \r\n        </div>\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\n//export default Dashboard;\r\n","D:\\USER\\Documents\\interred\\src\\views\\clientes\\ClientesAddForm.js",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  PDFViewer,\r\n  Page,\r\n  Text,\r\n  Document,\r\n  Font,\r\n  StyleSheet,\r\n  View,\r\n  Image\r\n} from \"@react-pdf/renderer\";\r\nimport {\r\n  MobileView,\r\n  isMobile\r\n} from \"react-device-detect\";\r\nimport ip from 'variables/ip';\r\nimport { MobilePDFReader } from \"react-read-pdf\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport LogoI from \"assets/img/INTERRED.jpg\";\r\n/*import LogoC from \"../Icons/LOGOI.jpeg\";\r\nimport marca from \"../Icons/marcagua.png\";\r\nimport LogoD from \"../Icons/LOGOD.jpeg\";\r\nimport cintillo from \"../../assets/img/cintillo.jpeg\";*/\r\nimport RobI from \"../Typography/Roboto-Italic.ttf\";\r\nimport RobB from \"../Typography/Roboto-Bold.ttf\";\r\nimport RobBI from \"../Typography/Roboto-BoldItalic.ttf\";\r\nimport CustomInput from \"components/CustomInput/CustomInput\";\r\nimport spellNumber from \"views/Dashboard/spellNumber\";\r\n//import Calendar from \"react-calendar\";\r\nimport {Calendar} from \"views/calendar\"\r\nimport {addCliente, editCliente} from \"./methods\"\r\nimport WN from \"@material-ui/icons/Warning\"\r\n//import spellNumber from \"./spellNumber\";\r\n//import InformeM from \"./InformeM\";\r\n// reactstrap components\r\nimport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nFont.register({\r\n  family: 'Roboto',\r\n  fonts: [{\r\n    src: RobI,\r\n    fontStyle: 'italic',\r\n    fontWeight: 50\r\n  }, {\r\n    src: RobB,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    src: RobBI,\r\n    fontStyle: 'italic',\r\n    fontWeight: 'bold'\r\n  }]\r\n  \r\n});\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n     idCliente: props.idCliente,\r\n     idRecibo: props.idRecibo,\r\n     nombre: props.nombre,\r\n     ubi: props.ubi,\r\n     telefono: props.telefono,\r\n     velocidad: \"10 MEGAS\",\r\n     idVelocidad: 0,\r\n     monto: 0,\r\n     difDate: 0,\r\n     bandSucces: false,\r\n     setMsg: props.setMsg,\r\n     setColor: props.setColor,\r\n     bandEdit: props.bandEdit,\r\n     fechaSI: props.fechaSI,\r\n     fechaSF: props.fechaSF,\r\n     fechaPago: props.fechaPago\r\n    }\r\n    \r\n  }\r\n\r\n  handdleUp=()=>{\r\n    const nombre = document.getElementById(\"nombre\").value;\r\n    const ubi = document.getElementById(\"ubi\").value;\r\n    const telefono = document.getElementById(\"telefono\").value;\r\n    const {idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago} = this.state;\r\n    const {bandEdit,idCliente} = this.state\r\n    if(nombre&&telefono&&ubi){\r\n      if(!bandEdit){\r\n        addCliente(this,nombre,telefono,ubi,idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago);\r\n      }else{\r\n        editCliente(this,nombre,telefono,ubi,idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago);\r\n      }\r\n    }\r\n  }\r\n  handleUpper = e => {\r\n    if (e.which === 32 || e.which > 39) {\r\n      this.selectionStartNombre = e.target.selectionStart\r\n      this.selectionEndNombre = e.target.selectionEnd\r\n      e.target.value = e.target.value.toUpperCase()\r\n      e.target.setSelectionRange(this.selectionStartNombre, this.selectionEndNombre);\r\n    }else if(e.which===13){\r\n      this.handdleUp()\r\n    }\r\n  }\r\n  allClientes=async(cliente)=>{\r\n    try {\r\n\r\n       //const sendUri = \"http://34.66.54.10:3015/\";\r\n       //const GenExpHTML = GenExpHTML\r\n       const sendUri = `${ip(\"2000\")}clientes/get`;\r\n       // const sendUri = \"http://localhost:3015/\";\r\n        //const sendUri = \"http://192.168.1.74:3015/\";\r\n       const bodyJSON = {\r\n         cliente: cliente,\r\n         tipoB: 0\r\n       }\r\n        const response = await fetch(sendUri, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(bodyJSON)\r\n        });\r\n\r\n        const responseJson = await response.json().then(r => {\r\n              console.log(`Response1:`)\r\n              console.log(r)\r\n            let data = [];\r\n            if (r.clientes) {\r\n             r.clientes.forEach(e => {\r\n                //setNombre(e.cliente);\r\n                //setTelefono(e.telefono);\r\n               //setUbi(e.ubi);\r\n               const nombre = document.getElementById(\"nombre\");\r\n               const telefono = document.getElementById(\"telefono\");\r\n               const ubi = document.getElementById(\"ubi\");\r\n               nombre.value=e.cliente;\r\n               telefono.value=e.telefono;\r\n               ubi.value=e.ubi;\r\n               const idVelocidad = e.ultimoRecibo?e.ultimoRecibo.idVelocidad:e.ultimoRecibo;//e.idVelocidad;\r\n               let velocidad = \"10 MEGAS\"\r\n               const monto=e.ultimoRecibo?e.ultimoRecibo.monto:e.ultimoRecibo;\r\n               const difDate=e.ultimoRecibo?e.ultimoRecibo.difDate:e.ultimoRecibo;\r\n               const fechaPago=e.ultimoRecibo?e.ultimoRecibo.fechaPago:e.ultimoRecibo;\r\n               const fechaSI=e.ultimoRecibo?e.ultimoRecibo.dateI:e.ultimoRecibo;\r\n               const fechaSF=e.ultimoRecibo?e.ultimoRecibo.dateF:e.ultimoRecibo;\r\n               const idRecibo=e.ultimoRecibo?e.ultimoRecibo.idRecibo:e.ultimoRecibo;\r\n               document.getElementById(\"pagar\").value=monto;\r\n               switch(idVelocidad){\r\n                  case 1:\r\n                    velocidad=\"20 MEGAS\"\r\n                    break;\r\n                  case 2:\r\n                    velocidad=\"30 MEGAS\"\r\n                    break;\r\n                  default:break;\r\n               }\r\n               this.setState({nombre: e.cliente,telefono: e.telefono, ubi: e.ubi, idVelocidad, velocidad, monto, difDate, fechaPago,fechaSI,fechaSF,idRecibo});\r\n                /*data.push({\r\n                  key: e.idCliente,\r\n                  cliente: e.cliente,\r\n                  telefono: e.telefono,\r\n                  ubi: e.ubi,\r\n                  fechaPago: null,\r\n                  fechaDePago:  e.ultimoRecibo?e.ultimoRecibo.fechaPago:e.ultimoRecibo,\r\n                  monto: null,\r\n                  montor: e.ultimoRecibo?e.ultimoRecibo.monto:e.ultimoRecibo,\r\n                  idVelocidad: e.ultimoRecibo?e.ultimoRecibo.idVelocidad:e.ultimoRecibo,\r\n                  velocidad: e.ultimoRecibo?e.ultimoRecibo.velocidad:e.ultimoRecibo,\r\n                  expiro: e.expiro,\r\n                  refRow: React.createRef(),\r\n                  dateSI:  e.ultimoRecibo?e.ultimoRecibo.dateI:e.ultimoRecibo,\r\n                  dateSF:  e.ultimoRecibo?e.ultimoRecibo.dateF:e.ultimoRecibo,\r\n                  difDate:  e.ultimoRecibo?e.ultimoRecibo.difDate:e.ultimoRecibo,\r\n                  idRecibo:  e.ultimoRecibo?e.ultimoRecibo.idRecibo:e.ultimoRecibo,\r\n                  \r\n                });\r\n                console.log(data) \r\n                if(e.expiro){\r\n                  this.expiro=1;\r\n                  data[data.length-1].fechaPago=<div  >\r\n                  <GenExpHTML c={this} refRow={data[data.length-1].refRow}  /> \r\n                  <i style={{color: 'red'}} >{data[data.length-1].fechaDePago}</i>\r\n                  </div>\r\n                  data[data.length-1].monto=<><i style={{color: 'red'}} >{data[data.length-1].montor}</i></>\r\n                //  data[data.length-1].velocidad=<i style={{color: 'red'}} >{data[data.length-1].velocidad}</i>\r\n                }*/\r\n\r\n             })\r\n\r\n            }\r\n            \r\n        });\r\n    } catch (e) {\r\n        console.log(`Error: ${e}`);\r\n    }\r\n}\r\nsetTotal=(t,idV,v)=>{\r\n    let {difDate} = this.state\r\n    difDate = difDate===\"undefined\"?1:difDate\r\n    console.log(`difDate: ${difDate}`)\r\n    const monto = t * difDate\r\n    const velL = document.getElementById(\"velocidadL\");\r\n        velL.value=v\r\n    \r\n    console.log(monto)\r\n    //c.setState({pagar})\r\n    //console.log(difDate)\r\n    this.setState({idVelocidad: idV,velocidad: v,monto})\r\n}\r\ncomponentDidMount(){\r\n  const {bandEdit,idCliente} = this.state\r\n  if(bandEdit){\r\n    this.allClientes(idCliente);\r\n  }\r\n}\r\n\r\n  render() {\r\n    const {classes} = this.props\r\n    const {nombre,telefono, ubi,bandSucces,bandEdit,velocidad,monto} = this.state\r\n    const labelB = bandEdit?\"ACTUALIZAR CLIENTE\":\"REGISTRAR CLIENTE\";\r\n    return (\r\n      <CardIcon>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <Card>\r\n              <CardBody>\r\n              <React.Fragment>\r\n                  <GridContainer>\r\n                    \r\n                  <GridItem xs={12} sm={12} md={3}>\r\n                  \r\n                      <CustomInput\r\n                        labelText=\"NOMBRE:\"\r\n                        id=\"nombre\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"text\",\r\n                          //value: nombre,\r\n                          defaultValue: nombre,\r\n                          //onBlur: this.handdleU\r\n                          onKeyUp: this.handleUpper,\r\n                          //onMouseUp: this.handdleU\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={3}>\r\n                      <CustomInput\r\n                        labelText=\"TELEFONO:\"\r\n                        id=\"telefono\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"text\",\r\n                          defaultValue: telefono,\r\n                          //onBlur: this.handdleU\r\n                          onKeyUp: this.handleUpper,\r\n                          //onMouseUp: this.handdleU\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    \r\n                    <GridItem xs={12} sm={12} md={3}>\r\n                      <CustomInput\r\n                        labelText=\"UBICACIÓN:\"\r\n                        id=\"ubi\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"text\",\r\n                          defaultValue: ubi,\r\n                          //onBlur: this.handdleU\r\n                          onKeyUp: this.handleUpper,\r\n                          //onMouseUp: this.handdleU\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={3}>\r\n                    <UncontrolledDropdown style={{position: 'relative', left: 0}}>\r\n                      <DropdownToggle\r\n                          caret\r\n                          className=\"btn-icon\"\r\n                          color=\"link\"\r\n                          data-toggle=\"dropdown\"\r\n                          type=\"button\"\r\n                          style={{width: 90}}\r\n                        >\r\n                        VELOCIDAD: \r\n                        </DropdownToggle>\r\n                        <DropdownToggle\r\n                          caret\r\n                          className=\"btn-icon\"\r\n                          color=\"link\"\r\n                          data-toggle=\"dropdown\"\r\n                          type=\"button\"\r\n                        >\r\n                          <i className=\"tim-icons icon-settings-gear-63\" />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu aria-labelledby=\"dropdownMenuLink\" left>\r\n                          <DropdownItem\r\n                           // href=\"#pablo\"\r\n                           style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              /*let difDate = 0\r\n                              let pagar = 0;\r\n                              const {fechaSI, fechaSF} = this.state\r\n                              const dateA = new Date(fechaSI);\r\n                              const dateB = new Date(fechaSF);\r\n                              //const {idVelocidad} = this.state;\r\n                              while(dateA<dateB){\r\n                                dateA.setMonth(dateA.getMonth()+1);\r\n                                difDate++;\r\n                              }*/\r\n                              this.setTotal(150,0,e.target.innerHTML)\r\n                            \r\n                            }}\r\n                          >\r\n                            10 MEGAS\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                           // href=\"#pablo\"\r\n                           style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              this.setTotal(250,1,e.target.innerHTML)\r\n                            }}\r\n                          >\r\n                            20 MEGAS\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                           // href=\"#pablo\"\r\n                           style={{cursor: 'pointer'}}\r\n                            onClick={e => {\r\n                              this.setTotal(300,2,e.target.innerHTML)\r\n                            \r\n                            }}\r\n                          >\r\n                            30 MEGAS\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                        <div style={{height: 7}} />\r\n                        \r\n                        <CustomInput\r\n                        labelText=\"VELOCIDAD:\"\r\n                        id=\"velocidadL\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"text\"\r\n                        }}\r\n                      />\r\n                      </UncontrolledDropdown>\r\n                  \r\n                    </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={5}>\r\n                      <h4 className={classes.cardTitleBlack}>\r\n                        PERIODO DE SUBSCRIPCIÓN:\r\n                      </h4>\r\n                      \r\n                       <Calendar c={this} />\r\n                      \r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={3}>\r\n                      <CustomInput\r\n                        labelText=\"A PAGAR:\"\r\n                        id=\"pagar\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"number\",\r\n                          defaultValue: monto!==\"undefined\"?monto:150\r\n                          //value: monto!==\"undefined\"?monto:150\r\n                          //onBlur: this.handdleU\r\n                          //onKeyUp: this.handleUpper,\r\n                          //onMouseUp: this.handdleU\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={4}>\r\n                      <h4 id=\"fechaPagoH\" className={classes.cardTitleBlack}>\r\n                        FECHA DE PAGO:\r\n                      </h4>\r\n                      \r\n                       <Calendar c={this} bandRange={true} />\r\n                      \r\n                    </GridItem>\r\n                    </GridContainer>\r\n                    <div style={{height: 400}} ></div>\r\n                    <GridContainer>\r\n                    <Button id='btnAddC' color=\"success\" \r\n                      style={{\r\n                        display: \"flex\",\r\n                        flex: 1,\r\n                        alignItems: \"center\"\r\n                      }} \r\n                      onClick={this.handdleUp}\r\n                      disabled={bandSucces}\r\n                      >\r\n                        {labelB}\r\n                      </Button>\r\n                  </GridContainer>\r\n                  \r\n                    </React.Fragment>\r\n              </CardBody>\r\n            </Card>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </CardIcon>\r\n    );\r\n  }\r\n}\r\nexport default App;","D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\addCliente.js",["390","391"],"import ip from \"variables/ip\"\r\nexport default async (c,nombre,telefono,ubi,idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago) => {\r\n    try{\r\n        c.setState({bandSucces: true});\r\n    const {setMsg, setColor} = c.state\r\n    const sendUri = `${ip(\"2000\")}clientes/addCliente`;\r\n    const bodyJSON = {\r\n          nombre,telefono,ubi,idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago\r\n    }\r\n    const response = await fetch(sendUri, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(bodyJSON)\r\n    });\r\n   \r\n    const responseJson = await response.json().then(r => {\r\n        //alert(r.exito)\r\n        setMsg(\"\")\r\n        setMsg(\"El Cliente se registró con éxito...\")\r\n        setColor(\"success\")\r\n            if(r.exito){\r\n                c.setState({bandSucces: false});\r\n            }\r\n    });\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n}","D:\\USER\\Documents\\interred\\src\\views\\clientes\\editClientes.js",["392","393","394","395","396","397","398","399","400","401","402"],"import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  UncontrolledAlert\r\n} from \"reactstrap\";\r\nimport ClientesAddForm from \"./ClientesAddForm\"\r\n\r\n// core components\r\n\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport stylesM from \"assets/jss/material-dashboard-react/components/listItemStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStylesM = makeStyles(stylesM);\r\nfunction getParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  console.log(url)\r\n  /*\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[/&]' + name + '(=([^&#]*)|&|#|$)'),\r\n    results = regex.exec(url);\r\n  if (!results) return '';\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n  */\r\n}\r\nfunction getId(url=window.location.href) {\r\n  //if (!url) url = window.location.href;\r\n  console.log(url)\r\n  const a = url.split(\"/\");\r\n  return a[a.length-1];\r\n}\r\n\r\nexport default () => {\r\n\r\n  //\r\n  //const [color, setColor] = React.useState(\"\")\r\n  /*constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bigChartData: \"data1\"\r\n    };\r\n  }*/\r\n  const classes = useStyles();\r\n  const classesM = useStylesM();\r\n  //let urlDec = getParameterByName('v');\r\n  const idCliente = getId();\r\n  console.log(idCliente);\r\n  //urlDec = decrypt(urlDec);\r\n  \r\n  const [state, setState] = React.useState({bigChartData: 'data3'});\r\n  const setBgChartData = name => {\r\n    /*this.setState({\r\n      bigChartData: name\r\n    });*/\r\n  };\r\n  let msgV = \"\";\r\n  let colorV = \"\";\r\n  const [msg, setMsg] = React.useState(msgV);\r\n  const [color, setColor] = React.useState(colorV);\r\n  //const [nombre, setNombre] = React.useState(\"\");\r\n  //const [telefono, setTelefono] = React.useState(\"\");\r\n  //const [ubi, setUbi] = React.useState(\"\");\r\n \r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n        {msg!==\"\"&&\r\n        <UncontrolledAlert color={color} >\r\n            <span>{msg}</span>\r\n        </UncontrolledAlert>}\r\n          <Row>\r\n            <Col xs=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <h5 className=\"card-category\">Clientes</h5>\r\n                      <CardTitle tag=\"h2\">EDITAR</CardTitle>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data1\"\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            window.history.pushState(null,'Administrador','/admin/listaClientes')\r\n                            window.history.go()\r\n                          }}\r\n                        >\r\n                          <input\r\n                            \r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Registrados\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-single-02\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data2\"\r\n                          })}\r\n                          onClick={() => {\r\n                            window.history.pushState(null,'Administrador','/admin/agregarCliente')\r\n                            window.history.go()\r\n                          }}\r\n                        >\r\n                          <input\r\n                          defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Registrar Clientes\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-gift-2\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"2\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: state.bigChartData === \"data3\"\r\n                          })}\r\n                          onClick={() => setBgChartData(\"data3\")}\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Editar Cliente\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-tap-02\" />\r\n                          </span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div >\r\n                    <ClientesAddForm classes={classes} classesM={classesM} setMsg={setMsg} setColor={setColor} idCliente={idCliente} nombre={\" \"}\r\n                    telefono={\" \"} ubi={\" \"}\r\n                    bandEdit={true} />                 \r\n                    {/*<Line\r\n                      data={chartExample1[this.state.bigChartData]}\r\n                      options={chartExample1.options}\r\n                    />*/}\r\n\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n         \r\n        </div>\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\n//export default Dashboard;\r\n","D:\\USER\\Documents\\interred\\src\\views\\zoom\\index.js",[],"D:\\USER\\Documents\\interred\\src\\views\\clientes\\methods\\editCliente.js",["403","404"],"import ip from \"variables/ip\"\r\nexport default async (c,nombre,telefono,ubi,idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago, bandTable) => {\r\n    try{\r\n        const {idCliente, idRecibo} = c.state;\r\n        if(!bandTable){\r\n            c.setState({bandSucces: true});\r\n        }\r\n\r\n        const {setMsg, setColor} = c.state\r\n        const sendUri = `${ip(\"2000\")}clientes/editCliente`;\r\n        const bodyJSON = {\r\n          idCliente,idRecibo,nombre,telefono,ubi,idVelocidad, monto, difDate, fechaSI, fechaSF, fechaPago\r\n        }\r\n        const response = await fetch(sendUri, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(bodyJSON)\r\n        });\r\n   \r\n        const responseJson = await response.json().then(r => {\r\n            //alert(r.exito)\r\n            if(!bandTable){\r\n                if(r.exito){\r\n                    setMsg(\"\")\r\n                    setMsg(\"El Cliente se actualizó con éxito...\")\r\n                    setColor(\"success\")\r\n                    c.setState({bandSucces: false});\r\n                }\r\n            }\r\n        });\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n}","D:\\USER\\Documents\\interred\\src\\views\\fab\\index.js",[],"D:\\USER\\Documents\\interred\\src\\views\\zoom\\zoom.js",["405"],"import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nexport default (props) => {\r\n    const {bandIn,click} = props;\r\n    const theme = useTheme();\r\n    const transitionDuration = {\r\n        enter: theme.transitions.duration.enteringScreen,\r\n        exit: theme.transitions.duration.leavingScreen,\r\n    };\r\nreturn (\r\n    <Zoom\r\n                    //key={fab.color}\r\n                    onClick={click}\r\n                    in={bandIn}\r\n                    onMouseEnter={(e)=>{console.log(e)\r\n                      \r\n                    }}\r\n                    onMouseLeave={\r\n                      (e)=>{\r\n                          /*\r\n                        if(e.target.nodeName!==\"BUTTON\"){\r\n                        e=e.target.parentElement\r\n                        while(e.nodeName!==\"BUTTON\"){\r\n                          e=e.parentElement\r\n                        }\r\n                      }else{\r\n                        e=e.target\r\n                      }\r\n                      if(e.id===\"\"){\r\n                            e.style.opacity=0.5\r\n                      }*/\r\n\r\n                      }\r\n                    }\r\n                    timeout={transitionDuration}\r\n                    style={{\r\n                      transitionDelay: `${!bandIn?transitionDuration.exit:\"0\"}ms`,\r\n                    }}\r\n                    unmountOnExit\r\n                  >\r\n                    {props.cp}\r\n                  </Zoom>\r\n)\r\n}","D:\\USER\\Documents\\interred\\src\\views\\fab\\fab.js",["406","407"],"import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\nexport default (props) => {\r\n    const {c,bandIn, Icon, color, handleClick} = props;\r\n    const theme = useTheme();\r\n    const transitionDuration = {\r\n        enter: theme.transitions.duration.enteringScreen,\r\n        exit: theme.transitions.duration.leavingScreen,\r\n    };\r\nreturn (\r\n    <Zoom\r\n                    //key={fab.color}\r\n                  in={bandIn}\r\n                  onClick={(e)=>{\r\n                  //var delStack = \r\n                  /*Object.keys(c.deleteStack).map((key) => {                    \r\n                    //  [Number(key), c.deleteStack[key]\r\n                    console.log(key)\r\n                    \r\n                  });*/\r\n                    //c.deleteCliente();\r\n                    handleClick();\r\n                    \r\n                    }}\r\n                    onMouseEnter={(e)=>{console.log(e)\r\n                      \r\n                    }}\r\n                    onMouseLeave={\r\n                      (e)=>{\r\n                          /*\r\n                        if(e.target.nodeName!==\"BUTTON\"){\r\n                        e=e.target.parentElement\r\n                        while(e.nodeName!==\"BUTTON\"){\r\n                          e=e.parentElement\r\n                        }\r\n                      }else{\r\n                        e=e.target\r\n                      }\r\n                      if(e.id===\"\"){\r\n                            e.style.opacity=0.5\r\n                      }*/\r\n\r\n                      }\r\n                    }\r\n                    timeout={transitionDuration}\r\n                    style={{\r\n                      transitionDelay: `${bandIn?transitionDuration.exit:\"0\"}ms`,\r\n                    }}\r\n                    unmountOnExit\r\n                  >\r\n                    <Fab color={color} aria-label=\"add\">\r\n                          <Icon />\r\n                    </Fab>\r\n                  </Zoom>\r\n)\r\n}",["408","409"],{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","replacedBy":"413"},{"ruleId":"410","replacedBy":"414"},{"ruleId":"412","replacedBy":"415"},{"ruleId":"416","severity":1,"message":"417","line":30,"column":3,"nodeType":"418","messageId":"419","endLine":30,"endColumn":17},{"ruleId":"416","severity":1,"message":"420","line":31,"column":3,"nodeType":"418","messageId":"419","endLine":31,"endColumn":15},{"ruleId":"416","severity":1,"message":"421","line":32,"column":3,"nodeType":"418","messageId":"419","endLine":32,"endColumn":15},{"ruleId":"416","severity":1,"message":"422","line":33,"column":3,"nodeType":"418","messageId":"419","endLine":33,"endColumn":23},{"ruleId":"416","severity":1,"message":"423","line":34,"column":3,"nodeType":"418","messageId":"419","endLine":34,"endColumn":8},{"ruleId":"416","severity":1,"message":"424","line":35,"column":3,"nodeType":"418","messageId":"419","endLine":35,"endColumn":12},{"ruleId":"416","severity":1,"message":"425","line":36,"column":3,"nodeType":"418","messageId":"419","endLine":36,"endColumn":8},{"ruleId":"416","severity":1,"message":"426","line":37,"column":3,"nodeType":"418","messageId":"419","endLine":37,"endColumn":8},{"ruleId":"416","severity":1,"message":"427","line":45,"column":3,"nodeType":"418","messageId":"419","endLine":45,"endColumn":16},{"ruleId":"416","severity":1,"message":"428","line":46,"column":3,"nodeType":"418","messageId":"419","endLine":46,"endColumn":16},{"ruleId":"416","severity":1,"message":"429","line":47,"column":3,"nodeType":"418","messageId":"419","endLine":47,"endColumn":16},{"ruleId":"416","severity":1,"message":"430","line":48,"column":3,"nodeType":"418","messageId":"419","endLine":48,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":65,"column":25,"nodeType":"433","messageId":"434","endLine":65,"endColumn":26,"suggestions":"435"},{"ruleId":"436","severity":1,"message":"437","line":72,"column":1,"nodeType":"438","endLine":248,"endColumn":2},{"ruleId":"416","severity":1,"message":"439","line":93,"column":9,"nodeType":"418","messageId":"419","endLine":93,"endColumn":13},{"ruleId":"416","severity":1,"message":"440","line":94,"column":9,"nodeType":"418","messageId":"419","endLine":94,"endColumn":13},{"ruleId":"416","severity":1,"message":"441","line":105,"column":17,"nodeType":"418","messageId":"419","endLine":105,"endColumn":25},{"ruleId":"416","severity":1,"message":"442","line":14,"column":8,"nodeType":"418","messageId":"419","endLine":14,"endColumn":16},{"ruleId":"416","severity":1,"message":"443","line":15,"column":8,"nodeType":"418","messageId":"419","endLine":15,"endColumn":21},{"ruleId":"416","severity":1,"message":"444","line":25,"column":8,"nodeType":"418","messageId":"419","endLine":25,"endColumn":16},{"ruleId":"416","severity":1,"message":"445","line":33,"column":8,"nodeType":"418","messageId":"419","endLine":33,"endColumn":10},{"ruleId":"416","severity":1,"message":"446","line":34,"column":10,"nodeType":"418","messageId":"419","endLine":34,"endColumn":14},{"ruleId":"416","severity":1,"message":"447","line":34,"column":16,"nodeType":"418","messageId":"419","endLine":34,"endColumn":19},{"ruleId":"416","severity":1,"message":"448","line":35,"column":8,"nodeType":"418","messageId":"419","endLine":35,"endColumn":14},{"ruleId":"416","severity":1,"message":"449","line":40,"column":3,"nodeType":"418","messageId":"419","endLine":40,"endColumn":14},{"ruleId":"416","severity":1,"message":"450","line":42,"column":3,"nodeType":"418","messageId":"419","endLine":42,"endColumn":13},{"ruleId":"416","severity":1,"message":"451","line":44,"column":3,"nodeType":"418","messageId":"419","endLine":44,"endColumn":12},{"ruleId":"416","severity":1,"message":"417","line":45,"column":3,"nodeType":"418","messageId":"419","endLine":45,"endColumn":17},{"ruleId":"416","severity":1,"message":"420","line":46,"column":3,"nodeType":"418","messageId":"419","endLine":46,"endColumn":15},{"ruleId":"416","severity":1,"message":"421","line":47,"column":3,"nodeType":"418","messageId":"419","endLine":47,"endColumn":15},{"ruleId":"416","severity":1,"message":"422","line":48,"column":3,"nodeType":"418","messageId":"419","endLine":48,"endColumn":23},{"ruleId":"416","severity":1,"message":"423","line":49,"column":3,"nodeType":"418","messageId":"419","endLine":49,"endColumn":8},{"ruleId":"416","severity":1,"message":"424","line":50,"column":3,"nodeType":"418","messageId":"419","endLine":50,"endColumn":12},{"ruleId":"416","severity":1,"message":"425","line":51,"column":3,"nodeType":"418","messageId":"419","endLine":51,"endColumn":8},{"ruleId":"416","severity":1,"message":"426","line":52,"column":3,"nodeType":"418","messageId":"419","endLine":52,"endColumn":8},{"ruleId":"416","severity":1,"message":"452","line":55,"column":3,"nodeType":"418","messageId":"419","endLine":55,"endColumn":22},{"ruleId":"416","severity":1,"message":"453","line":116,"column":7,"nodeType":"418","messageId":"419","endLine":116,"endColumn":11},{"ruleId":"416","severity":1,"message":"454","line":117,"column":7,"nodeType":"418","messageId":"419","endLine":117,"endColumn":8},{"ruleId":"416","severity":1,"message":"455","line":141,"column":15,"nodeType":"418","messageId":"419","endLine":141,"endColumn":27},{"ruleId":"416","severity":1,"message":"455","line":175,"column":15,"nodeType":"418","messageId":"419","endLine":175,"endColumn":27},{"ruleId":"456","severity":1,"message":"457","line":236,"column":43,"nodeType":"458","messageId":"459","endLine":236,"endColumn":45},{"ruleId":"431","severity":1,"message":"432","line":248,"column":25,"nodeType":"433","messageId":"434","endLine":248,"endColumn":26,"suggestions":"460"},{"ruleId":"416","severity":1,"message":"461","line":329,"column":5,"nodeType":"418","messageId":"419","endLine":329,"endColumn":14},{"ruleId":"416","severity":1,"message":"450","line":22,"column":8,"nodeType":"418","messageId":"419","endLine":22,"endColumn":18},{"ruleId":"416","severity":1,"message":"462","line":26,"column":8,"nodeType":"418","messageId":"419","endLine":26,"endColumn":11},{"ruleId":"416","severity":1,"message":"463","line":35,"column":8,"nodeType":"418","messageId":"419","endLine":35,"endColumn":19},{"ruleId":"416","severity":1,"message":"423","line":48,"column":3,"nodeType":"418","messageId":"419","endLine":48,"endColumn":8},{"ruleId":"416","severity":1,"message":"424","line":49,"column":3,"nodeType":"418","messageId":"419","endLine":49,"endColumn":12},{"ruleId":"416","severity":1,"message":"425","line":50,"column":3,"nodeType":"418","messageId":"419","endLine":50,"endColumn":8},{"ruleId":"416","severity":1,"message":"426","line":51,"column":3,"nodeType":"418","messageId":"419","endLine":51,"endColumn":8},{"ruleId":"416","severity":1,"message":"464","line":52,"column":3,"nodeType":"418","messageId":"419","endLine":52,"endColumn":6},{"ruleId":"416","severity":1,"message":"465","line":53,"column":3,"nodeType":"418","messageId":"419","endLine":53,"endColumn":6},{"ruleId":"416","severity":1,"message":"466","line":150,"column":23,"nodeType":"418","messageId":"419","endLine":150,"endColumn":29},{"ruleId":"416","severity":1,"message":"467","line":151,"column":23,"nodeType":"418","messageId":"419","endLine":151,"endColumn":29},{"ruleId":"416","severity":1,"message":"466","line":312,"column":10,"nodeType":"418","messageId":"419","endLine":312,"endColumn":16},{"ruleId":"416","severity":1,"message":"468","line":334,"column":12,"nodeType":"418","messageId":"419","endLine":334,"endColumn":15},{"ruleId":"416","severity":1,"message":"469","line":334,"column":59,"nodeType":"418","messageId":"419","endLine":334,"endColumn":62},{"ruleId":"416","severity":1,"message":"470","line":334,"column":64,"nodeType":"418","messageId":"419","endLine":334,"endColumn":67},{"ruleId":"416","severity":1,"message":"471","line":334,"column":68,"nodeType":"418","messageId":"419","endLine":334,"endColumn":73},{"ruleId":"416","severity":1,"message":"440","line":334,"column":93,"nodeType":"418","messageId":"419","endLine":334,"endColumn":97},{"ruleId":"416","severity":1,"message":"472","line":334,"column":99,"nodeType":"418","messageId":"419","endLine":334,"endColumn":110},{"ruleId":"416","severity":1,"message":"473","line":334,"column":112,"nodeType":"418","messageId":"419","endLine":334,"endColumn":121},{"ruleId":"416","severity":1,"message":"474","line":334,"column":146,"nodeType":"418","messageId":"419","endLine":334,"endColumn":154},{"ruleId":"436","severity":1,"message":"437","line":1,"column":1,"nodeType":"438","endLine":14,"endColumn":2},{"ruleId":"436","severity":1,"message":"437","line":3,"column":1,"nodeType":"438","endLine":21,"endColumn":2},{"ruleId":"416","severity":1,"message":"454","line":4,"column":12,"nodeType":"418","messageId":"419","endLine":4,"endColumn":13},{"ruleId":"416","severity":1,"message":"475","line":6,"column":28,"nodeType":"418","messageId":"419","endLine":6,"endColumn":45},{"ruleId":"416","severity":1,"message":"476","line":7,"column":12,"nodeType":"418","messageId":"419","endLine":7,"endColumn":17},{"ruleId":"416","severity":1,"message":"477","line":7,"column":19,"nodeType":"418","messageId":"419","endLine":7,"endColumn":27},{"ruleId":"416","severity":1,"message":"478","line":12,"column":8,"nodeType":"418","messageId":"419","endLine":12,"endColumn":14},{"ruleId":"416","severity":1,"message":"479","line":54,"column":20,"nodeType":"418","messageId":"419","endLine":54,"endColumn":36},{"ruleId":"416","severity":1,"message":"480","line":54,"column":83,"nodeType":"418","messageId":"419","endLine":54,"endColumn":91},{"ruleId":"416","severity":1,"message":"481","line":200,"column":7,"nodeType":"418","messageId":"419","endLine":200,"endColumn":15},{"ruleId":"416","severity":1,"message":"482","line":226,"column":11,"nodeType":"418","messageId":"419","endLine":226,"endColumn":12},{"ruleId":"416","severity":1,"message":"483","line":262,"column":17,"nodeType":"418","messageId":"419","endLine":262,"endColumn":25},{"ruleId":"456","severity":1,"message":"484","line":312,"column":91,"nodeType":"458","messageId":"485","endLine":312,"endColumn":93},{"ruleId":"486","severity":1,"message":"487","line":3,"column":5,"nodeType":"488","messageId":"489","endLine":14,"endColumn":6},{"ruleId":"486","severity":1,"message":"487","line":24,"column":5,"nodeType":"488","messageId":"489","endLine":51,"endColumn":6},{"ruleId":"486","severity":1,"message":"487","line":65,"column":5,"nodeType":"488","messageId":"489","endLine":79,"endColumn":6},{"ruleId":"490","severity":1,"message":"491","line":110,"column":17,"nodeType":"492","messageId":"493","endLine":110,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":124,"column":20,"nodeType":"492","messageId":"493","endLine":124,"endColumn":22},{"ruleId":"436","severity":1,"message":"437","line":131,"column":1,"nodeType":"438","endLine":159,"endColumn":2},{"ruleId":"490","severity":1,"message":"491","line":146,"column":31,"nodeType":"492","messageId":"493","endLine":146,"endColumn":33},{"ruleId":"490","severity":1,"message":"491","line":153,"column":21,"nodeType":"492","messageId":"493","endLine":153,"endColumn":23},{"ruleId":"490","severity":1,"message":"491","line":155,"column":22,"nodeType":"492","messageId":"493","endLine":155,"endColumn":24},{"ruleId":"436","severity":1,"message":"437","line":1,"column":1,"nodeType":"438","endLine":6,"endColumn":2},{"ruleId":"431","severity":1,"message":"432","line":19,"column":27,"nodeType":"433","messageId":"434","endLine":19,"endColumn":28,"suggestions":"494"},{"ruleId":"436","severity":1,"message":"437","line":26,"column":1,"nodeType":"438","endLine":80,"endColumn":2},{"ruleId":"416","severity":1,"message":"455","line":63,"column":11,"nodeType":"418","messageId":"419","endLine":63,"endColumn":23},{"ruleId":"416","severity":1,"message":"495","line":69,"column":34,"nodeType":"418","messageId":"419","endLine":69,"endColumn":40},{"ruleId":"436","severity":1,"message":"437","line":1,"column":1,"nodeType":"438","endLine":14,"endColumn":2},{"ruleId":"410","replacedBy":"496"},{"ruleId":"412","replacedBy":"497"},{"ruleId":"416","severity":1,"message":"498","line":2,"column":8,"nodeType":"418","messageId":"419","endLine":2,"endColumn":15},{"ruleId":"416","severity":1,"message":"499","line":4,"column":7,"nodeType":"418","messageId":"419","endLine":4,"endColumn":13},{"ruleId":"416","severity":1,"message":"500","line":17,"column":10,"nodeType":"418","messageId":"419","endLine":17,"endColumn":28},{"ruleId":"431","severity":1,"message":"432","line":19,"column":27,"nodeType":"433","messageId":"434","endLine":19,"endColumn":28,"suggestions":"501"},{"ruleId":"436","severity":1,"message":"437","line":26,"column":1,"nodeType":"438","endLine":55,"endColumn":2},{"ruleId":"416","severity":1,"message":"455","line":42,"column":11,"nodeType":"418","messageId":"419","endLine":42,"endColumn":23},{"ruleId":"416","severity":1,"message":"417","line":13,"column":3,"nodeType":"418","messageId":"419","endLine":13,"endColumn":17},{"ruleId":"416","severity":1,"message":"420","line":14,"column":3,"nodeType":"418","messageId":"419","endLine":14,"endColumn":15},{"ruleId":"416","severity":1,"message":"421","line":15,"column":3,"nodeType":"418","messageId":"419","endLine":15,"endColumn":15},{"ruleId":"416","severity":1,"message":"422","line":16,"column":3,"nodeType":"418","messageId":"419","endLine":16,"endColumn":23},{"ruleId":"416","severity":1,"message":"423","line":17,"column":3,"nodeType":"418","messageId":"419","endLine":17,"endColumn":8},{"ruleId":"416","severity":1,"message":"424","line":18,"column":3,"nodeType":"418","messageId":"419","endLine":18,"endColumn":12},{"ruleId":"416","severity":1,"message":"425","line":19,"column":3,"nodeType":"418","messageId":"419","endLine":19,"endColumn":8},{"ruleId":"416","severity":1,"message":"426","line":20,"column":3,"nodeType":"418","messageId":"419","endLine":20,"endColumn":8},{"ruleId":"416","severity":1,"message":"427","line":28,"column":3,"nodeType":"418","messageId":"419","endLine":28,"endColumn":16},{"ruleId":"416","severity":1,"message":"428","line":29,"column":3,"nodeType":"418","messageId":"419","endLine":29,"endColumn":16},{"ruleId":"416","severity":1,"message":"429","line":30,"column":3,"nodeType":"418","messageId":"419","endLine":30,"endColumn":16},{"ruleId":"416","severity":1,"message":"430","line":31,"column":3,"nodeType":"418","messageId":"419","endLine":31,"endColumn":16},{"ruleId":"416","severity":1,"message":"502","line":34,"column":8,"nodeType":"418","messageId":"419","endLine":34,"endColumn":22},{"ruleId":"416","severity":1,"message":"503","line":41,"column":8,"nodeType":"418","messageId":"419","endLine":41,"endColumn":11},{"ruleId":"431","severity":1,"message":"432","line":47,"column":25,"nodeType":"433","messageId":"434","endLine":47,"endColumn":26,"suggestions":"504"},{"ruleId":"436","severity":1,"message":"437","line":54,"column":1,"nodeType":"438","endLine":196,"endColumn":2},{"ruleId":"416","severity":1,"message":"495","line":67,"column":20,"nodeType":"418","messageId":"419","endLine":67,"endColumn":26},{"ruleId":"416","severity":1,"message":"441","line":69,"column":17,"nodeType":"418","messageId":"419","endLine":69,"endColumn":25},{"ruleId":"416","severity":1,"message":"505","line":2,"column":8,"nodeType":"418","messageId":"419","endLine":2,"endColumn":16},{"ruleId":"416","severity":1,"message":"506","line":4,"column":3,"nodeType":"418","messageId":"419","endLine":4,"endColumn":12},{"ruleId":"416","severity":1,"message":"507","line":5,"column":3,"nodeType":"418","messageId":"419","endLine":5,"endColumn":7},{"ruleId":"416","severity":1,"message":"508","line":6,"column":3,"nodeType":"418","messageId":"419","endLine":6,"endColumn":7},{"ruleId":"416","severity":1,"message":"509","line":7,"column":3,"nodeType":"418","messageId":"419","endLine":7,"endColumn":11},{"ruleId":"416","severity":1,"message":"510","line":9,"column":3,"nodeType":"418","messageId":"419","endLine":9,"endColumn":13},{"ruleId":"416","severity":1,"message":"511","line":10,"column":3,"nodeType":"418","messageId":"419","endLine":10,"endColumn":7},{"ruleId":"416","severity":1,"message":"512","line":11,"column":3,"nodeType":"418","messageId":"419","endLine":11,"endColumn":8},{"ruleId":"416","severity":1,"message":"513","line":14,"column":3,"nodeType":"418","messageId":"419","endLine":14,"endColumn":13},{"ruleId":"416","severity":1,"message":"514","line":15,"column":3,"nodeType":"418","messageId":"419","endLine":15,"endColumn":11},{"ruleId":"416","severity":1,"message":"515","line":18,"column":10,"nodeType":"418","messageId":"419","endLine":18,"endColumn":25},{"ruleId":"416","severity":1,"message":"450","line":23,"column":8,"nodeType":"418","messageId":"419","endLine":23,"endColumn":18},{"ruleId":"416","severity":1,"message":"516","line":26,"column":8,"nodeType":"418","messageId":"419","endLine":26,"endColumn":13},{"ruleId":"416","severity":1,"message":"463","line":35,"column":8,"nodeType":"418","messageId":"419","endLine":35,"endColumn":19},{"ruleId":"416","severity":1,"message":"445","line":39,"column":8,"nodeType":"418","messageId":"419","endLine":39,"endColumn":10},{"ruleId":"416","severity":1,"message":"423","line":48,"column":3,"nodeType":"418","messageId":"419","endLine":48,"endColumn":8},{"ruleId":"416","severity":1,"message":"424","line":49,"column":3,"nodeType":"418","messageId":"419","endLine":49,"endColumn":12},{"ruleId":"416","severity":1,"message":"425","line":50,"column":3,"nodeType":"418","messageId":"419","endLine":50,"endColumn":8},{"ruleId":"416","severity":1,"message":"426","line":51,"column":3,"nodeType":"418","messageId":"419","endLine":51,"endColumn":8},{"ruleId":"416","severity":1,"message":"464","line":52,"column":3,"nodeType":"418","messageId":"419","endLine":52,"endColumn":6},{"ruleId":"416","severity":1,"message":"465","line":53,"column":3,"nodeType":"418","messageId":"419","endLine":53,"endColumn":6},{"ruleId":"416","severity":1,"message":"517","line":102,"column":21,"nodeType":"418","messageId":"419","endLine":102,"endColumn":30},{"ruleId":"416","severity":1,"message":"455","line":142,"column":15,"nodeType":"418","messageId":"419","endLine":142,"endColumn":27},{"ruleId":"416","severity":1,"message":"518","line":145,"column":17,"nodeType":"418","messageId":"419","endLine":145,"endColumn":21},{"ruleId":"416","severity":1,"message":"473","line":237,"column":53,"nodeType":"418","messageId":"419","endLine":237,"endColumn":62},{"ruleId":"436","severity":1,"message":"437","line":2,"column":1,"nodeType":"438","endLine":31,"endColumn":2},{"ruleId":"416","severity":1,"message":"455","line":19,"column":11,"nodeType":"418","messageId":"419","endLine":19,"endColumn":23},{"ruleId":"416","severity":1,"message":"417","line":13,"column":3,"nodeType":"418","messageId":"419","endLine":13,"endColumn":17},{"ruleId":"416","severity":1,"message":"420","line":14,"column":3,"nodeType":"418","messageId":"419","endLine":14,"endColumn":15},{"ruleId":"416","severity":1,"message":"421","line":15,"column":3,"nodeType":"418","messageId":"419","endLine":15,"endColumn":15},{"ruleId":"416","severity":1,"message":"422","line":16,"column":3,"nodeType":"418","messageId":"419","endLine":16,"endColumn":23},{"ruleId":"416","severity":1,"message":"423","line":17,"column":3,"nodeType":"418","messageId":"419","endLine":17,"endColumn":8},{"ruleId":"416","severity":1,"message":"424","line":18,"column":3,"nodeType":"418","messageId":"419","endLine":18,"endColumn":12},{"ruleId":"416","severity":1,"message":"425","line":19,"column":3,"nodeType":"418","messageId":"419","endLine":19,"endColumn":8},{"ruleId":"416","severity":1,"message":"426","line":20,"column":3,"nodeType":"418","messageId":"419","endLine":20,"endColumn":8},{"ruleId":"416","severity":1,"message":"500","line":37,"column":10,"nodeType":"418","messageId":"419","endLine":37,"endColumn":28},{"ruleId":"436","severity":1,"message":"437","line":56,"column":1,"nodeType":"438","endLine":206,"endColumn":2},{"ruleId":"416","severity":1,"message":"441","line":73,"column":17,"nodeType":"418","messageId":"419","endLine":73,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":2,"column":1,"nodeType":"438","endLine":37,"endColumn":2},{"ruleId":"416","severity":1,"message":"455","line":23,"column":15,"nodeType":"418","messageId":"419","endLine":23,"endColumn":27},{"ruleId":"436","severity":1,"message":"437","line":4,"column":1,"nodeType":"438","endLine":45,"endColumn":2},{"ruleId":"436","severity":1,"message":"437","line":6,"column":1,"nodeType":"438","endLine":59,"endColumn":2},{"ruleId":"416","severity":1,"message":"454","line":7,"column":12,"nodeType":"418","messageId":"419","endLine":7,"endColumn":13},{"ruleId":"410","replacedBy":"519"},{"ruleId":"412","replacedBy":"520"},"no-native-reassign",["521"],"no-negated-in-lhs",["522"],["521"],["522"],"no-unused-vars","'DropdownToggle' is defined but never used.","Identifier","unusedVar","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Table' is defined but never used.","'chartExample1' is defined but never used.","'chartExample2' is defined but never used.","'chartExample3' is defined but never used.","'chartExample4' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["523","524"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'añoI' is assigned a value but never used.","'añoF' is assigned a value but never used.","'setState' is assigned a value but never used.","'GridItem' is defined but never used.","'GridContainer' is defined but never used.","'CardIcon' is defined but never used.","'WN' is defined but never used.","'Line' is defined but never used.","'Bar' is defined but never used.","'Switch' is defined but never used.","'ButtonGroup' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'band' is assigned a value but never used.","'c' is assigned a value but never used.","'responseJson' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["525","526"],"'bandTrash' is assigned a value but never used.","'pie' is defined but never used.","'spellNumber' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'dateSI' is assigned a value but never used.","'dateSF' is assigned a value but never used.","'dia' is assigned a value but never used.","'mes' is assigned a value but never used.","'año' is assigned a value but never used.","'pagar' is assigned a value but never used.","'idVelocidad' is assigned a value but never used.","'velocidad' is assigned a value but never used.","'idRecibo' is assigned a value but never used.","'setOpenExpireDash' is assigned a value but never used.","'opExp' is assigned a value but never used.","'setOpExp' is assigned a value but never used.","'Button' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'genCarta' is assigned a value but never used.","'d' is assigned a value but never used.","'setDense' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["527","528"],"'urlDec' is assigned a value but never used.",["521"],["522"],"'decrypt' is defined but never used.","'genCTA' is assigned a value but never used.","'getParameterByName' is defined but never used.",["529","530"],"'TablesClientes' is defined but never used.","'Pdf' is defined but never used.",["531","532"],"'ReactDOM' is defined but never used.","'PDFViewer' is defined but never used.","'Page' is defined but never used.","'Text' is defined but never used.","'Document' is defined but never used.","'StyleSheet' is defined but never used.","'View' is defined but never used.","'Image' is defined but never used.","'MobileView' is defined but never used.","'isMobile' is defined but never used.","'MobilePDFReader' is defined but never used.","'LogoI' is defined but never used.","'idCliente' is assigned a value but never used.","'data' is assigned a value but never used.",["521"],["522"],"no-global-assign","no-unsafe-negation",{"messageId":"533","fix":"534","desc":"535"},{"messageId":"536","fix":"537","desc":"538"},{"messageId":"533","fix":"539","desc":"535"},{"messageId":"536","fix":"540","desc":"538"},{"messageId":"533","fix":"541","desc":"535"},{"messageId":"536","fix":"542","desc":"538"},{"messageId":"533","fix":"543","desc":"535"},{"messageId":"536","fix":"544","desc":"538"},{"messageId":"533","fix":"545","desc":"535"},{"messageId":"536","fix":"546","desc":"538"},"removeEscape",{"range":"547","text":"548"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"549","text":"550"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"551","text":"548"},{"range":"552","text":"550"},{"range":"553","text":"548"},{"range":"554","text":"550"},{"range":"555","text":"548"},{"range":"556","text":"550"},{"range":"557","text":"548"},{"range":"558","text":"550"},[1753,1754],"",[1753,1753],"\\",[8244,8245],[8244,8244],[1027,1028],[1027,1027],[985,986],[985,985],[1167,1168],[1167,1167]]